
/*
#define GET_FLIM_MASTER_MODULATION_FREQUENCY_TABLE 0x091B
#define SET_FLIM_MASTER_MODULATION_FREQUENCY_TABLE 0x0A1B
*/

#define GET_FLIM_RELATIVE_PHASE                    0x0B1B
#define SET_FLIM_RELATIVE_PHASE                    0x0C1B


#endif//SC2_COMMAND_H


////////////////////////////////////////////////////
//                                                //
//   Automatically generated Headerfile for the   //
//              logging module.                   //
//         Modify at your own risk.               //
//                                                //
////////////////////////////////////////////////////



#ifndef SC2_COMMAND_TOSTRING_H
#define SC2_COMMAND_TOSTRING_H


#define _CRT_SECURE_NO_WARNINGS

typedef struct {
WORD wErrorNumber;
char Description[50];
} SC2_ErrorNumberToString;

typedef struct {
WORD wGroupCode;
WORD wSize;
SC2_ErrorNumberToString ErrNo[50];
} SC2_ErrorCodeToString;

static const int ErrorCodesLength = 12;

static const SC2_ErrorCodeToString ErrorCodes[] = {
{0x0080, 0x0001, {{0x0000, "RESPONSE_OK_CODE"}}},
{0x00c0, 0x0001, {{0x0000, "RESPONSE_ERROR_CODE"}}},
{0x0010, 0x0016, {{0x0001, "GET_CAMERA_TYPE"},{0x0002, "GET_CAMERA_HEALTH_STATUS"},{0x0003, "RESET_SETTINGS_TO_DEFAULT"},{0x0005, "INITIATE_SELFTEST_PROCEDURE"},{0x0006, "GET_TEMPERATURE"},{0x0007, "GET_HARDWARE_VERSIONS"},{0x0008, "GET_FIRMWARE_VERSIONS"},{0x0009, "GET_CAMERA_NAME"},{0x000a, "GET_INFO_STRING"},{0x000b, "GET_FAN_CONTROL_STATUS"},{0x000c, "SET_FAN_CONTROL_PARAMS"},{0x000d, "GET_FIRMWARE_VERSIONS_EXT"},{0x000e, "WRITE_MAILBOX"},{0x000f, "READ_MAILBOX"},{0x0010, "GET_MAILBOX_STATUS"},{0x0011, "GET_CAMERA_SETUP"},{0x0012, "SET_CAMERA_SETUP"},{0x0013, "GET_POWERSAVE_MODE"},{0x0014, "SET_POWERSAVE_MODE"},{0x0015, "GET_BATTERY_STATUS"},{0x0016, "GET_EXTERNAL_REGISTER"},{0x0017, "SET_EXTERNAL_REGISTER"}}},
{0x0011, 0x002e, {{0x0001, "GET_CAMERA_DESCRIPTION"},{0x0002, "GET_ROI"},{0x0003, "SET_ROI"},{0x0004, "GET_BINNING"},{0x0005, "SET_BINNING"},{0x0006, "GET_PIXELRATE"},{0x0007, "SET_PIXELRATE"},{0x0008, "GET_CONVERSION_FACTOR"},{0x0009, "SET_CONVERSION_FACTOR"},{0x000a, "GET_DOUBLE_IMAGE_MODE"},{0x000b, "SET_DOUBLE_IMAGE_MODE"},{0x000c, "GET_ADC_OPERATION"},{0x000d, "SET_ADC_OPERATION"},{0x000e, "GET_IR_SENSITIVITY"},{0x000f, "SET_IR_SENSITIVITY"},{0x0010, "GET_COOLING_SETPOINT_TEMPERATURE"},{0x0011, "SET_COOLING_SETPOINT_TEMPERATURE"},{0x0012, "GET_OFFSET_MODE"},{0x0013, "SET_OFFSET_MODE"},{0x0014, "GET_SENSOR_FORMAT"},{0x0015, "SET_SENSOR_FORMAT"},{0x0016, "GET_CAMERA_DESCRIPTION_EX"},{0x0019, "GET_NOISE_FILTER_MODE"},{0x001a, "SET_NOISE_FILTER_MODE"},{0x001e, "GET_HOT_PIXEL_CORRECTION_MODE"},{0x001f, "SET_HOT_PIXEL_CORRECTION_MODE"},{0x0020, "WRITE_HOT_PIXEL_LIST"},{0x0021, "READ_HOT_PIXEL_LIST"},{0x0022, "CLEAR_HOT_PIXEL_LIST"},{0x0025, "GET_NUMBER_HW_IO_SIGNALS"},{0x0026, "GET_HW_IO_SIGNAL_DESCRIPTION"},{0x0027, "GET_BAYER_MULTIPLIER"},{0x0028, "SET_BAYER_MULTIPLIER"},{0x0029, "GET_COLOR_CORRECTION_MATRIX"},{0x002c, "GET_DSNU_ADJUST_MODE"},{0x002d, "SET_DSNU_ADJUST_MODE"},{0x002e, "INIT_DSNU_ADJUSTMENT"},{0x002f, "GET_CDI_MODE"},{0x0030, "SET_CDI_MODE"},{0x0031, "GET_LOOKUPTABLE_INFO"},{0x0032, "GET_LOOKUPTABLE"},{0x0033, "SET_LOOKUPTABLE"},{0x0034, "LOAD_LOOKUPTABLE"},{0x0035, "READ_LOOKUPTABLE"},{0x0036, "GET_LOOKUPTABLE_INFO_EXT"},{0x0037, "GET_COOLING_SETPOINTS"}}},
{0x0012, 0x0027, {{0x0001, "GET_DELAY_EXPOSURE_TIME"},{0x0002, "SET_DELAY_EXPOSURE_TIME"},{0x0003, "GET_TRIGGER_MODE"},{0x0004, "SET_TRIGGER_MODE"},{0x0005, "FORCE_TRIGGER"},{0x0006, "GET_CAMERA_BUSY_STATUS"},{0x0007, "GET_USER_POWER_DOWN_TIME"},{0x0008, "SET_USER_POWER_DOWN_TIME"},{0x0009, "GET_EXP_TRIG_SIGNAL_STATUS"},{0x000a, "GET_DELAY_EXPOSURE_TIME_TABLE"},{0x000b, "SET_DELAY_EXPOSURE_TIME_TABLE"},{0x000c, "GET_TIMEBASE"},{0x000d, "SET_TIMEBASE"},{0x000e, "GET_POWER_DOWN_MODE"},{0x000f, "SET_POWER_DOWN_MODE"},{0x0010, "GET_COC_RUNTIME"},{0x0013, "GET_FPS_EXPOSURE_MODE"},{0x0014, "SET_FPS_EXPOSURE_MODE"},{0x0015, "GET_MODULATION_MODE"},{0x0016, "SET_MODULATION_MODE"},{0x0017, "GET_FRAMERATE"},{0x0018, "SET_FRAMERATE"},{0x0019, "GET_HW_IO_SIGNAL"},{0x001a, "SET_HW_IO_SIGNAL"},{0x001b, "GET_COC_EXPTIME"},{0x001c, "GET_CAMERA_SYNC_MODE"},{0x001d, "SET_CAMERA_SYNC_MODE"},{0x001e, "GET_IMAGE_TIMING"},{0x001f, "GET_FAST_TIMING_MODE"},{0x0020, "SET_FAST_TIMING_MODE"},{0x0021, "GET_SENSOR_SIGNAL_STATUS"},{0x0022, "GET_CMOS_LINETIMING"},{0x0023, "SET_CMOS_LINETIMING"},{0x0024, "GET_CMOS_LINE_EXPOSURE_DELAY"},{0x0025, "SET_CMOS_LINE_EXPOSURE_DELAY"},{0x0026, "GET_HW_IO_SIGNAL_TIMING"},{0x0027, "SET_HW_IO_SIGNAL_TIMING"},{0x0028, "GET_HW_LED_SIGNAL"},{0x0029, "SET_HW_LED_SIGNAL"}}},
{0x0013, 0x0006, {{0x0001, "GET_CAMERA_RAM_SIZE"},{0x0002, "GET_CAMERA_RAM_SEGMENT_SIZE"},{0x0003, "SET_CAMERA_RAM_SEGMENT_SIZE"},{0x0004, "CLEAR_RAM_SEGMENT"},{0x0005, "GET_ACTIVE_RAM_SEGMENT"},{0x0006, "SET_ACTIVE_RAM_SEGMENT"}}},
{0x0014, 0x0017, {{0x0001, "GET_STORAGE_MODE"},{0x0002, "SET_STORAGE_MODE"},{0x0003, "GET_RECORDER_SUBMODE"},{0x0004, "SET_RECORDER_SUBMODE"},{0x0005, "GET_RECORDING_STATE"},{0x0006, "SET_RECORDING_STATE"},{0x000a, "ARM_CAMERA"},{0x0007, "GET_ACQUIRE_MODE"},{0x0008, "SET_ACQUIRE_MODE"},{0x0009, "GET_ACQ_ENBL_SIGNAL_STATUS"},{0x000b, "SET_DATE_TIME"},{0x000c, "GET_TIMESTAMP_MODE"},{0x000d, "SET_TIMESTAMP_MODE"},{0x000e, "GET_RECORD_STOP_EVENT"},{0x000f, "SET_RECORD_STOP_EVENT"},{0x0010, "STOP_RECORD"},{0x0011, "GET_EVENT_MON_CONFIGURATION"},{0x0012, "SET_EVENT_MON_CONFIGURATION"},{0x0013, "GET_EVENT_LIST"},{0x0014, "GET_ACQUIRE_CONTROL"},{0x0015, "SET_ACQUIRE_CONTROL"},{0x0016, "GET_ACQUIRE_MODE_EX"},{0x0017, "SET_ACQUIRE_MODE_EX"}}},
{0x0015, 0x0011, {{0x0001, "GET_SEGMENT_IMAGE_SETTINGS"},{0x0002, "GET_NUMBER_OF_IMAGES_IN_SEGMENT"},{0x0005, "READ_IMAGES_FROM_SEGMENT"},{0x0006, "REQUEST_IMAGE"},{0x0007, "CANCEL_IMAGE_TRANSFER"},{0x0008, "REPEAT_IMAGE"},{0x0009, "GET_BIT_ALIGNMENT"},{0x000a, "SET_BIT_ALIGNMENT"},{0x000b, "PLAY_IMAGES_FROM_SEGMENT"},{0x000c, "GET_PLAY_POSITION"},{0x000d, "SET_VIDEO_PAYLOAD_IDENTIFIER"},{0x000e, "GET_METADATA_MODE"},{0x000f, "SET_METADATA_MODE"},{0x0010, "GET_COLOR_SETTINGS"},{0x0011, "SET_COLOR_SETTINGS"},{0x0012, "DO_WHITE_BALANCE"},{0x0013, "GET_WHITE_BALANCE_STATUS"}}},
{0x0016, 0x000d, {{0x0001, "GET_IEEE1394_INTERFACE_PARAMS"},{0x0002, "SET_IEEE1394_INTERFACE_PARAMS"},{0x0003, "GET_IEEE1394_ISO_BYTEORDER"},{0x0004, "SET_IEEE1394_ISO_BYTEORDER"},{0x0011, "GET_INTERFACE_OUTPUT_FORMAT"},{0x0010, "SET_INTERFACE_OUTPUT_FORMAT"},{0x0012, "GET_IMAGE_TRANSFER_MODE"},{0x0013, "SET_IMAGE_TRANSFER_MODE"},{0x0014, "GET_INTERFACE_STATUS"},{0x0032, "GET_CL_BAUDRATE"},{0x0033, "SET_CL_BAUDRATE"},{0x0034, "GET_CL_CONFIGURATION"},{0x0035, "SET_CL_CONFIGURATION"}}},
{0x0017, 0x0003, {{0x0001, "FATAL_ERROR_MSG"},{0x0007, "IMAGE_TRANSFER_DONE_MSG"},{0x0008, "DEBUG_ENVELOPE"}}},
{0x001a, 0x000e, {{0x0001, "ASCII_COMMAND"},{0x0002, "LS_COMMAND_LED_DRIVER_ON"},{0x0003, "LS_COMMAND_LED_DRIVER_OFF"},{0x0004, "LS_COMMAND_LED_DRIVER_GET_STATE"},{0x0010, "LS_COMMAND_SET_OPERATING_MODE"},{0x0011, "LS_COMMAND_GET_OPERATING_MODE"},{0x0012, "LS_COMMAND_FREQUENCY_UPDATE"},{0x0020, "LS_COMMAND_ANALOG_SWITCH_SINE"},{0x0021, "LS_COMMAND_ANALOG_SWITCH_SQUARE"},{0x0022, "LS_COMMAND_ANALOG_SWITCH_EXTERNAL"},{0x0023, "LS_COMMAND_ANALOG_SWITCH_GROUND"},{0x0024, "LS_COMMAND_ANALOG_SWITCH_GET_STATE"},{0x0044, "LS_COMMAND_DDS_SET_RELATIVE_PHASE"},{0x0045, "LS_COMMAND_DDS_GET_RELATIVE_PHASE"}}},
{0x001b, 0x000c, {{0x0001, "GET_FLIM_MODULATION_PARAMS"},{0x0002, "SET_FLIM_MODULATION_PARAMS"},{0x0003, "GET_FLIM_PHASE_SEQUENCE_PARAMS"},{0x0004, "SET_FLIM_PHASE_SEQUENCE_PARAMS"},{0x0005, "GET_FLIM_IMAGE_PROCESSING_FLOW"},{0x0006, "SET_FLIM_IMAGE_PROCESSING_FLOW"},{0x0007, "GET_FLIM_MASTER_MODULATION_FREQUENCY"},{0x0008, "SET_FLIM_MASTER_MODULATION_FREQUENCY"},{0x0009, "GET_FLIM_MASTER_MODULATION_FREQUENCY_TABLE"},{0x000a, "SET_FLIM_MASTER_MODULATION_FREQUENCY_TABLE"},{0x000b, "GET_FLIM_RELATIVE_PHASE"},{0x000c, "SET_FLIM_RELATIVE_PHASE"}}},
};


static inline void ComToString(WORD code,char* string) {
  WORD groupcode = code & 0x00FF;
  WORD errorcode = (code & 0xFF00)/0x0100;
  for(int i=0;i<ErrorCodesLength;i++) { 
    if(groupcode == ErrorCodes[i].wGroupCode) { 
      for(int j=0;j<ErrorCodes[i].wSize;j++) {
        if(errorcode == ErrorCodes[i].ErrNo[j].wErrorNumber) {
          sprintf(string,"0x%04x %s",code,ErrorCodes[i].ErrNo[j].Description);
          return; } }
      sprintf(string,"0x%04x ERROR_CODE_NOT_FOUND",code);
      return; } }
  sprintf(string,"0x%04x GROUP_CODE_NOT_FOUND",code);
  return;
}

#endif
//-----------------------------------------------------------------//
// Name        | SC2_common.h                | Type: ( ) source    //
//-------------------------------------------|       (*) header    //
// Project     | PCO                         |       ( ) others    //
//-----------------------------------------------------------------//
// Platform    | - Embedded platforms like M16C, AVR32, PIC32 etc. //
//             | - PC with several Windows versions, Linux etc.    //
//-----------------------------------------------------------------//
// Environment | - Platform dependent                              //
//-----------------------------------------------------------------//
// Purpose     | Defines, constants for use with SDK commands for  //
//             | pco.camera (SC2)                                  //
//-----------------------------------------------------------------//
// Author      | MBl/FRe/LWa and others, PCO AG                    //
//-----------------------------------------------------------------//
// Revision    | versioned using SVN                               //
//-----------------------------------------------------------------//
// Notes       |                                                   //
//-----------------------------------------------------------------//
// (c) 2010-2014 PCO AG * Donaupark 11 * D-93309 Kelheim / Germany //
// *  Phone: +49 (0)9441 / 2005-0  *                               //
// *  Fax:   +49 (0)9441 / 2005-20 *  Email: info@pco.de           //
//-----------------------------------------------------------------//


//-----------------------------------------------------------------//
// Revision History:                                               //
//-----------------------------------------------------------------//
// Rev.:     | Date:      | Changed:                               //
// --------- | ---------- | ---------------------------------------//
//  0.01     | 15.07.2010 |  new file, FRE                         //
//-----------------------------------------------------------------//
//-----------------------------------------------------------------//

#if !defined SC2_COMMON
#define SC2_COMMON


#ifdef WIN32
//#pragma message("Structures packed to 1 byte boundary!")
#pragma pack(push) 
#pragma pack(1)            
#endif

#ifdef __MICROBLAZE__
#define struct struct __attribute__ ((packed))
#endif


#if !defined PCO_METADATA_STRUCT
#define PCO_METADATA_STRUCT_DEFINED
typedef struct
{
  WORD   wSize;                      // size of this structure
  WORD   wVersion;                   // version of the structure
  // 4
  BYTE   bIMAGE_COUNTER_BCD[4];      // 0x00000001 to 0x99999999, where first byte is least sign. byte
  // 8
  BYTE   bIMAGE_TIME_US_BCD[3];      // 0x000000 to 0x999999, where first byte is least significant byte
  BYTE   bIMAGE_TIME_SEC_BCD;        // 0x00 to 0x59
  BYTE   bIMAGE_TIME_MIN_BCD;        // 0x00 to 0x59
  BYTE   bIMAGE_TIME_HOUR_BCD;       // 0x00 to 0x23
  BYTE   bIMAGE_TIME_DAY_BCD;        // 0x01 to 0x31
  BYTE   bIMAGE_TIME_MON_BCD;        // 0x01 to 0x12
  BYTE   bIMAGE_TIME_YEAR_BCD;       // 0x00 to 0x99 only last two digits, 2000 has to be added
  BYTE   bIMAGE_TIME_STATUS;         // 0x00 = internal osc, 0x01 = synced by IRIG, 0x02 = synced by master
  // 18
  WORD   wEXPOSURE_TIME_BASE;        // timebase ns/us/ms for following exposure time
  DWORD  dwEXPOSURE_TIME;            // exposure time in ns/us/ms  according to timebase
  DWORD  dwFRAMERATE_MILLIHZ;        // framerate in mHz, 0 if unknown or not
  SHORT  sSENSOR_TEMPERATURE;        // current sensor temperature in 0.1 centigrade, 0x8000 if not known
  // 30
  WORD   wIMAGE_SIZE_X;              // actual size of image in x direction (horizontal)
  WORD   wIMAGE_SIZE_Y;              // actual size of image in y direction (vertical)
  BYTE   bBINNING_X;                 // binning in x direction, 0x00 if unknown or n/a
  BYTE   bBINNING_Y;                 // binning in y direction, 0x00 if unknown or n/a
  // 36
  DWORD  dwSENSOR_READOUT_FREQUENCY; // sensor readout frequency in Hz, 0 if unknown
  WORD   wSENSOR_CONV_FACTOR;        // sensor conversions factor in e-/ct, 0 if unknown
  // 42
  DWORD  dwCAMERA_SERIAL_NO;         // camera serial no, 0 if unknown
  WORD   wCAMERA_TYPE;               // type of pco camera taking the images, see SDK, 0 if unknown
  BYTE   bBIT_RESOLUTION;            // number of valid bits of the pixel values, e.g. 12 for the pco.dimax
  BYTE   bSYNC_STATUS;               // status of PLL for external synchronisation (100 Hz or 1 kHz): 0 = off, 1 = locked
  WORD   wDARK_OFFSET;               // nominal dark offset in counts, 0xFFFF if unknown, current dark offset may differ
  // 52
  BYTE   bTRIGGER_MODE;              // exposure trigger mode, see PCO SDK
  BYTE   bDOUBLE_IMAGE_MODE;         // 0x00 = standard, 0x01 = double image (PIV) mode
  BYTE   bCAMERA_SYNC_MODE;          // see PCO SDK
  BYTE   bIMAGE_TYPE;                // 0x01 ist b/w, 0x02 is color bayer pattern, 0x10 is RGB mode
  WORD   wCOLOR_PATTERN;             // bayer pattern color mask, same as for SDK command "Get Camera Description", 0 if n/a
  // 58 bytes ..
}
PCO_METADATA_STRUCT;
#endif


#ifdef WIN32
//#pragma message("Structures packed back to normal!")
#pragma pack(pop)  
#endif

#ifdef __MICROBLAZE__
#undef struct
#endif


#endif
//-----------------------------------------------------------------//
// Name        | SC2_defs.h                  | Type: ( ) source    //
//-------------------------------------------|       (*) header    //
// Project     | PCO                         |       ( ) others    //
//-----------------------------------------------------------------//
// Platform    | - Embedded platforms like M16C, AVR32, PIC32 etc. //
//             | - PC with several Windows versions, Linux etc.    //
//-----------------------------------------------------------------//
// Environment | - Platform dependent                              //
//-----------------------------------------------------------------//
// Purpose     | Defines, constants for use with SDK commands for  //
//             | pco.camera (SC2)                                  //
//-----------------------------------------------------------------//
// Author      | MBl/FRe/LWa/AGr and others, PCO AG                //
//-----------------------------------------------------------------//
// Revision    | versioned using SVN                               //
//-----------------------------------------------------------------//
// Notes       |                                                   //
//-----------------------------------------------------------------//
// (c) 2003-2014 PCO AG * Donaupark 11 * D-93309 Kelheim / Germany //
// *  Phone: +49 (0)9441 / 2005-0  *                               //
// *  Fax:   +49 (0)9441 / 2005-20 *  Email: info@pco.de           //
//-----------------------------------------------------------------//


//-----------------------------------------------------------------//
// Revision History:                                               //
//-----------------------------------------------------------------//
// Rev.:     | Date:      | Changed:                               //
// --------- | ---------- | ---------------------------------------//
//  0.01     | 30.07.2003 |  new file, LWA                         //
//-----------------------------------------------------------------//
//  0.02     | 19.08.2003 |  MBL all changed to uppercase          //
//           |            |                                        //
//-----------------------------------------------------------------//
//  0.03     | 01.06.2004 |  LWA:                                  //
//           |            |  FPS_EXPOSURE_MODE_OFF/ON added.       //
//           | 28.06.2004 |  LWA:  BIT_ALIGNMENT_MSB/LSB added.    //
//-----------------------------------------------------------------//
//  0.20     | 23.07.2004 |  LWA:  Defines for internal use moved  //
//           |            |        to SC2_DEFS_INTERN.H            //
//           | 14.09.2004 |  LWA:  CAMERATYPE_ROCHEHTC added       //
//           | 26.09.2004 |  LWA:  TEMPERATURE_NOT_AVAILABLE added //
//-----------------------------------------------------------------//
//  0.21     | 17.03.2005 |  LWA:  CAMERATYPE_284XS added          //
//           |            |                                        //
//           |            |  LWA  added:                           //
//           |            |                                        //
//           |            |    NOISE_FILTER_MODE_ON                //
//           |            |    NOISE_FILTER_MODE_OFF               //
//           |            |    NOISE_FILTER_MODE_REMOVE_HOT_DARK   //
//-----------------------------------------------------------------//
//  0.21     | 04.05.2005 |  LWA:  TIMESTAMP_MODE_ASCII added.     //
//           |            |        GENERALCAPS1_... defines added. //
//           | 08.06.2005 |  FRE:  GENERALCAPS1_DATAFORMAT2X12 ad. //
//           | 27.06.2005 |  LWA:  GENERALCAPS1_RECORD_STOP added. //
//           |            |        RECORD_STOP_EVENT_OFF           //
//           |            |        RECORD_STOP_EVENT_STOP_BY_SW    //
//           |            |        RECORD_STOP_EVENT_STOP_EXTERNAL //
//-----------------------------------------------------------------//
//  0.22     | 06.03.2006 |  LWA:  CAMERATYPE_KODAK1300OEM added.  //
//           |            |                                        //
//           | 09.03.2006 |  LWA:  added defines:                  //
//           |            |                                        //
//           |            |    HOT_PIXEL_CORRECTION_OFF            //
//           |            |    HOT_PIXEL_CORRECTION_ON             //
//           |            |    HOT_PIXEL_CORRECTION_TEST           //
//           |            |    GENERALCAPS1_HOT_PIXEL_CORRECTION   //
//-----------------------------------------------------------------//
//  0.23     | 01.06.2006 |  Preparation for modulation mode:      //
//           |   (FRe)    |  Added modulation mode parameters and  //
//           |            |  telegrams:                            //
//           |            |    do_S(G)ET_MODULATION_MODE           //
//           |            |  Added second descriptor, flags and    //
//           |            |  telegram:                             //
//           |            |    do_GET_DESCRIPTION_EX               //
//           |            |  Changed header to local               //
//           |            |  c:\pco_include\include in order to    //
//           |            |   support header file repository       //
//-----------------------------------------------------------------//
//  0.24     | 19.09.2007 |  FRE:Added defines for GET_INFO_STRING //
//-----------------------------------------------------------------//
//  0.25     | 31.01.2008 |  FRE:Added defines for                 //
//           |            |  GENERALCAPS1_NO_EXTEXPCTRL            //
//           |            |  GENERALCAPS1_NO_TIMESTAMP             //
//           |            |  GENERALCAPS1_NO_ACQUIREMODE           //
//-----------------------------------------------------------------//
//  0.26     | 31.08.2010 |  FRE:Added defines for                 //
//           |            |  Lookup Table commands                 //
//           |            |  Fairchild color sensor                //
//           | 08.11.2011 |  FRE: Added                            // 
//           |            |   GENERALCAPS1_NO_GLOBAL_SHUTTER       //
//-----------------------------------------------------------------//
//  0.27     | 04.12.2013 |  FRE: Moved HWIO defs from             //
//           |            |  sc2_sdkstructures.h                   //
//-----------------------------------------------------------------//
//  0.28     | 09.12.2013 |  RFR: Added defines for pco.flim       //
//           |            |  commands                              //
//-----------------------------------------------------------------//
//  0.29     | 21.02.2014 |  USB PID,VID and EP addresses added    //
//           |            |  VTI                                   //
//-----------------------------------------------------------------//

// Do not change any values after release! Only additions are allowed!

#ifndef SC2_DEFS_H
#define SC2_DEFS_H


// ------------------------------------------------------------------------ //
// -- Defines for Get Camera Type Command: -------------------------------- //
// ------------------------------------------------------------------------ //

// pco.camera types
#define CAMERATYPE_PCO1200HS     0x0100
#define CAMERATYPE_PCO1300       0x0200
#define CAMERATYPE_PCO1600       0x0220
#define CAMERATYPE_PCO2000       0x0240
#define CAMERATYPE_PCO4000       0x0260

// pco.1300 types
#define CAMERATYPE_ROCHEHTC      0x0800 // Roche OEM
#define CAMERATYPE_284XS         0x0800
#define CAMERATYPE_KODAK1300OEM  0x0820 // Kodak OEM

// pco.1400 types
#define CAMERATYPE_PCO1400       0x0830
#define CAMERATYPE_NEWGEN        0x0840 // Roche OEM
#define CAMERATYPE_PROVEHR       0x0850 // Zeiss OEM

// pco.usb.pixelfly
#define CAMERATYPE_PCO_USBPIXELFLY        0x0900


// pco.dimax types
#define CAMERATYPE_PCO_DIMAX_STD          0x1000
#define CAMERATYPE_PCO_DIMAX_TV           0x1010

#define CAMERATYPE_PCO_DIMAX_AUTOMOTIVE    0x1020   // obsolete and not used for the pco.dimax, please remove from your sources!
#define CAMERATYPE_PCO_DIMAX_CS            0x1020   // code is now used for pco.dimax CS

#define CAMERASUBTYPE_PCO_DIMAX_Weisscam  0x0064   // 100 = Weisscam, all features
#define CAMERASUBTYPE_PCO_DIMAX_HD        0x80FF   // pco.dimax HD
#define CAMERASUBTYPE_PCO_DIMAX_HD_plus   0xC0FF   // pco.dimax HD+
#define CAMERASUBTYPE_PCO_DIMAX_X35       0x00C8   // 200 = Weisscam/P+S HD35

#define CAMERASUBTYPE_PCO_DIMAX_HS1       0x207F   
#define CAMERASUBTYPE_PCO_DIMAX_HS2       0x217F   
#define CAMERASUBTYPE_PCO_DIMAX_HS4       0x237F   

#define CAMERASUBTYPE_PCO_DIMAX_CS_AM      0x407F   
#define CAMERASUBTYPE_PCO_DIMAX_CS_RFU_1   0x417F   
#define CAMERASUBTYPE_PCO_DIMAX_CS_RFU_2   0x427F   
#define CAMERASUBTYPE_PCO_DIMAX_CS_RFU_3   0x437F   
#define CAMERASUBTYPE_PCO_DIMAX_CS_RFU_4   0x447F   
#define CAMERASUBTYPE_PCO_DIMAX_CS_RFU_5   0x457F   
#define CAMERASUBTYPE_PCO_DIMAX_CS_RFU_6   0x467F   
#define CAMERASUBTYPE_PCO_DIMAX_CS_RFU_7   0x477F   
        
#define CAMERASUBTYPE_PCO_DIMAX_CS_OEM_IX  0x507F   
#define CAMERASUBTYPE_PCO_DIMAX_CS_OEM_1   0x517F   
#define CAMERASUBTYPE_PCO_DIMAX_CS_OEM_2   0x527F   
#define CAMERASUBTYPE_PCO_DIMAX_CS_OEM_3   0x537F   
#define CAMERASUBTYPE_PCO_DIMAX_CS_OEM_4   0x547F   
#define CAMERASUBTYPE_PCO_DIMAX_CS_OEM_5   0x557F   
#define CAMERASUBTYPE_PCO_DIMAX_CS_OEM_6   0x567F   
#define CAMERASUBTYPE_PCO_DIMAX_CS_OEM_7   0x577F   


// pco.sensicam types                   // tbd., all names are internal ids
#define CAMERATYPE_SC3_SONYQE    0x1200 // SC3 based - Sony 285
#define CAMERATYPE_SC3_EMTI      0x1210 // SC3 based - TI 285SPD
#define CAMERATYPE_SC3_KODAK4800 0x1220 // SC3 based - Kodak KAI-16000



// pco.edge types
#define CAMERATYPE_PCO_EDGE                  0x1300 // pco.edge 5.5 (Sensor CIS2521) Interface: CameraLink , rolling shutter
#define CAMERATYPE_PCO_EDGE_42               0x1302 // pco.edge 4.2 (Sensor CIS2020) Interface: CameraLink , rolling shutter
#define CAMERATYPE_PCO_EDGE_GL               0x1310 // pco.edge 5.5 (Sensor CIS2521) Interface: CameraLink , global  shutter
#define CAMERATYPE_PCO_EDGE_USB3             0x1320 // pco.edge     (all sensors   ) Interface: USB 3.0    ,(all shutter modes)
#define CAMERATYPE_PCO_EDGE_HS               0x1340 // pco.edge     (all sensors   ) Interface: high speed ,(all shutter modes) 
#define CAMERATYPE_PCO_EDGE_MT               0x1304 // pco.edge MT2 (all sensors   ) Interface: CameraLink Base, rolling shutter


#define CAMERASUBTYPE_PCO_EDGE_SPRINGFIELD   0x0006
#define CAMERASUBTYPE_PCO_EDGE_31            0x0031
#define CAMERASUBTYPE_PCO_EDGE_42            0x0042
#define CAMERASUBTYPE_PCO_EDGE_55            0x0055
#define CAMERASUBTYPE_PCO_EDGE_DEVELOPMENT   0x0100
#define CAMERASUBTYPE_PCO_EDGE_X2            0x0200
#define CAMERASUBTYPE_PCO_EDGE_RESOLFT       0x0300
#define CAMERASUBTYPE_PCO_EDGE_GOLD          0x0FF0
#define CAMERASUBTYPE_PCO_EDGE_DUAL_CLOCK    0x000D
#define CAMERASUBTYPE_PCO_EDGE_DICAM         0xDC00
#define CAMERASUBTYPE_PCO_EDGE_42_LT         0x8042


// pco.flim types
#define CAMERATYPE_PCO_FLIM      0x1400 // pco.flim

// pco.flow types
#define CAMERATYPE_PCO_FLOW      0x1500 // pco.flow

#define CAMERATYPE_PCO_PANDA     0x1600 // pco.panda

//#define CAMERATYPE_PCOUPDATE     0xFFFF   // indicates Camera in update mode!

// ------------------------------------------------------------------------ //
// -- Defines for Interfaces ---------------------------------------------- //
// ------------------------------------------------------------------------ //
// These defines are camera internal defines and are not SDK related!
#define INTERFACE_FIREWIRE       0x0001
#define INTERFACE_CAMERALINK     0x0002
#define INTERFACE_USB            0x0003
#define INTERFACE_ETHERNET       0x0004
#define INTERFACE_SERIAL         0x0005
#define INTERFACE_USB3           0x0006
#define INTERFACE_CAMERALINKHS   0x0007
#define INTERFACE_COAXPRESS      0x0008

// ------------------------------------------------------------------------ //
// -- Defines for USB devices --------------------------------------------- //
// ------------------------------------------------------------------------ //
//USB 2.0 and USB 3.0 Vendor ID
#define USB_VID                   0x1CB2
//USB 2.0 Product IDs
#define USB_PID_IF_GIGEUSB_20     0x0001      // FX2 (Cypress 68013a)
#define USB_PID_CAM_PIXFLY_20     0x0002      // FX2 (Cypress 68013a)
#define USB_PID_IF_GIGEUSB_30     0x0003      // FX3 (Cypress CYUSB3014-BZX) Application Code
#define USB_PID_IF_GIGEUSB_30_B1  0x0004      // FX3 (Cypress CYUSB3014-BZX) SPI Boot Code (FPGA Update)
#define USB_PID_IF_GIGEUSB_30_B2  0x0005      // FX3 (Cypress CYUSB3014-BZX) I2C Boot Code (FX3 Update)
#define USB_PID_CAM_EDGEUSB_30    0x0006      // Fx3 (Cypress CYUSB3014-BZX)
#define USB_PID_CAM_FLOW_20       0x0007      // AVR32
#define USB_PID_CAM_EDGEHS_20     0x0008      // AVR32
#define USB_PID_P5CTR             0x0009      // FTDI FT2232H (for updating P5CTR framegrabber)
#define USB_PID_P5CTR_PROD        0x000A      // FTDI FT2232H (usb bridge for controlling the production tool for the P5CTR framegrabber)
#define USB_PID_CAM_PANDA_20      0x000B      // Panda AVR32 USB2.0 Interface
#define USB_PID_CAM_PANDA_30      0x000C      // Panda FX3 USB3.0 Interface
#define USB_PID_DMCT_DEBUG        0x0080      // Microchip PIC32MZ / DMCT debug port


//USB Device Endpoint addresses
// IN: From device to PC
// OUT: From PC to device
#define USB_EP_FX2_CTRL_IN        0x84
#define USB_EP_FX2_CTRL_OUT       0x02
#define USB_EP_FX2_IMG_IN         0x86
#define USB_EP_FX3_CTRL_IN        0x81
#define USB_EP_FX3_CTRL_OUT       0x01
#define USB_EP_FX3_IMG_IN         0x82
#define USB_EP_AVR32_CTRL_IN      0x81
#define USB_EP_AVR32_CTRL_OUT     0x02

// ------------------------------------------------------------------------ //
// -- Defines for CameraLink DataFormat  ---------------------------------- //
// ------------------------------------------------------------------------ //

// Obsolete. Use defines in SC2_SdkAddendum.h
#define CL_DATAFORMAT     0x0F
#define CL_FORMAT_1x16    0x01
#define CL_FORMAT_2x12    0x02
#define CL_FORMAT_3x8     0x03
#define CL_FORMAT_4x16    0x04
#define CL_FORMAT_5x16    0x05
#define CL_FORMAT_5x12    0x07

#define CL_TESTPATTERN    0xF0
#define CL_TESTPATTERN_1  0x10  
#define CL_TESTPATTERN_2  0x20  
#define CL_TESTPATTERN_3  0x30  

// ------------------------------------------------------------------------ //
// -- Bitmask Defines for CameraLink Transmit------------------------------ //
// ------------------------------------------------------------------------ //

#define CL_TRANSMIT_ENABLE          0x01
#define CL_TRANSMIT_LONGGAP         0x02

// ------------------------------------------------------------------------ //
// -- Defines for CameraLink CCLines     ---------------------------------- //
// ------------------------------------------------------------------------ //

#define CL_CCLINE_LINE1_TRIGGER           0x01
#define CL_CCLINE_LINE2_ACQUIRE           0x02
#define CL_CCLINE_LINE3_HANDSHAKE         0x04
#define CL_CCLINE_LINE4_TRANSMIT_ENABLE   0x08



// ------------------------------------------------------------------------ //
// -- Defines for Get Camera Health Status Command: ----------------------- //
// ------------------------------------------------------------------------ //

// mask bits: evaluate as follows: if (stat & ErrorSensorTemperature) ... //

#define WARNING_POWERSUPPLYVOLTAGERANGE 0x00000001
#define WARNING_POWERSUPPLYTEMPERATURE  0x00000002
#define WARNING_CAMERATEMPERATURE       0x00000004
#define WARNING_SENSORTEMPERATURE       0x00000008
#define WARNING_EXTERNAL_BATTERY_LOW    0x00000010
#define WARNING_OFFSET_REGULATION_RANGE 0x00000020

#define WARNING_CAMERARAM               0x00020000


#define ERROR_POWERSUPPLYVOLTAGERANGE   0x00000001
#define ERROR_POWERSUPPLYTEMPERATURE    0x00000002
#define ERROR_CAMERATEMPERATURE         0x00000004
#define ERROR_SENSORTEMPERATURE         0x00000008
#define ERROR_EXTERNAL_BATTERY_LOW      0x00000010

#define ERROR_CAMERAINTERFACE           0x00010000
#define ERROR_CAMERARAM                 0x00020000
#define ERROR_CAMERAMAINBOARD           0x00040000
#define ERROR_CAMERAHEADBOARD           0x00080000

#define STATUS_DEFAULT_STATE            0x00000001
#define STATUS_SETTINGS_VALID           0x00000002
#define STATUS_RECORDING_ON             0x00000004
#define STATUS_READ_IMAGE_ON            0x00000008
#define STATUS_FRAMERATE_VALID          0x00000010
#define STATUS_SEQ_STOP_TRIGGERED       0x00000020
#define STATUS_LOCKED_TO_EXTSYNC        0x00000040
#define STATUS_EXT_BATTERY_AVAILABLE    0x00000080
#define STATUS_IS_IN_POWERSAVE          0x00000100
#define STATUS_POWERSAVE_LEFT           0x00000200
#define STATUS_LOCKED_TO_IRIG           0x00000400
#define STATUS_IS_IN_BOOTLOADER         0x80000000


// ------------------------------------------------------------------------ //
// -- Defines for Get Camera Description Command: ------------------------- //
// ------------------------------------------------------------------------ //

  // Description type

#define DESCRIPTION_STANDARD   0x0000         // Standard Descripton
#define DESCRIPTION_2          0x0001         // Descripton nr. 2

// ------------------------------------------------------------------------ //
// -- Sensor type definitions --------------------------------------------- //
// ------------------------------------------------------------------------ //
  // Sensor Type 
  // ATTENTION: Lowest bit is reserved for COLOR CCDs
  // In case a new color CCD is added the lowest bit MUST be set!!!
#define SENSOR_ICX285AL           0x0010      // Sony
#define SENSOR_ICX285AK           0x0011      // Sony
#define SENSOR_ICX263AL           0x0020      // Sony
#define SENSOR_ICX263AK           0x0021      // Sony
#define SENSOR_ICX274AL           0x0030      // Sony
#define SENSOR_ICX274AK           0x0031      // Sony
#define SENSOR_ICX407AL           0x0040      // Sony
#define SENSOR_ICX407AK           0x0041      // Sony
#define SENSOR_ICX414AL           0x0050      // Sony
#define SENSOR_ICX414AK           0x0051      // Sony
#define SENSOR_ICX407BLA          0x0060      // Sony UV type



#define SENSOR_KAI2000M           0x0110      // Kodak
#define SENSOR_KAI2000CM          0x0111      // Kodak
#define SENSOR_KAI2001M           0x0120      // Kodak
#define SENSOR_KAI2001CM          0x0121      // Kodak
#define SENSOR_KAI2002M           0x0122      // Kodak slow roi
#define SENSOR_KAI2002CM          0x0123      // Kodak slow roi

#define SENSOR_KAI4010M           0x0130      // Kodak
#define SENSOR_KAI4010CM          0x0131      // Kodak
#define SENSOR_KAI4011M           0x0132      // Kodak slow roi
#define SENSOR_KAI4011CM          0x0133      // Kodak slow roi

#define SENSOR_KAI4020M           0x0140      // Kodak
#define SENSOR_KAI4020CM          0x0141      // Kodak
#define SENSOR_KAI4021M           0x0142      // Kodak slow roi
#define SENSOR_KAI4021CM          0x0143      // Kodak slow roi
#define SENSOR_KAI4022M           0x0144      // Kodak 4022 monochrom
#define SENSOR_KAI4022CM          0x0145      // Kodak 4022 color

#define SENSOR_KAI11000M          0x0150      // Kodak
#define SENSOR_KAI11000CM         0x0151      // Kodak
#define SENSOR_KAI11002M          0x0152      // Kodak slow roi
#define SENSOR_KAI11002CM         0x0153      // Kodak slow roi

#define SENSOR_KAI16000AXA        0x0160      // Kodak t:4960x3324, e:4904x3280, a:4872x3248
#define SENSOR_KAI16000CXA        0x0161      // Kodak

#define SENSOR_MV13BW             0x1010      // Micron
#define SENSOR_MV13COL            0x1011      // Micron

#define SENSOR_CIS2051_V1_FI_BW   0x2000      //Fairchild front illuminated
#define SENSOR_CIS2051_V1_FI_COL  0x2001
#define SENSOR_CIS1042_V1_FI_BW   0x2002
#define SENSOR_CIS2051_V1_BI_BW   0x2010      //Fairchild back illuminated

//obsolete #define SENSOR_CCD87           0x2010         // E2V
//obsolete #define SENSOR_TC253           0x2110         // TI
#define SENSOR_TC285SPD           0x2120      // TI 285SPD

#define SENSOR_CYPRESS_RR_V1_BW   0x3000      // CYPRESS RoadRunner V1 B/W
#define SENSOR_CYPRESS_RR_V1_COL  0x3001      // CYPRESS RoadRunner V1 Color

#define SENSOR_CMOSIS_CMV12000_BW    0x3100   // CMOSIS CMV12000 4096x3072 b/w
#define SENSOR_CMOSIS_CMV12000_COL   0x3101   // CMOSIS CMV12000 4096x3072 color

#define SENSOR_QMFLIM_V2B_BW      0x4000      // CSEM QMFLIM V2B B/W

#define SENSOR_GPIXEL_2020_ASM          0x5000  // GPixel 2020 revision A
#define SENSOR_GPIXEL_2020_ESM_REV_A    0x5002  // GPixel 2020 eSM prototype, revision a+ , enhanced QE, no binning
#define SENSOR_GPIXEL_2020_BSM          0x5004  // GPixel 2020 revision B; charge binning
#define SENSOR_GPIXEL_2020_BSC          0x5005  // GPixel 2020 rev. B, color version
#define SENSOR_GPIXEL_2020_ESM_REV_B    0x5006  // GPixel 2020 rev. B, enhanced QE version

// ------------------------------------------------------------------------ //
// -- Defines for Get Info String Command: -------------------------------- //
// ------------------------------------------------------------------------ //
typedef struct
{
 WORD  wTypdef;
 char  szName[40];
}PCO_SENSOR_TYPE_DEF;

#if defined PCO_SENSOR_CREATE_OBJECT
const PCO_SENSOR_TYPE_DEF far pco_sensor[] =
{
               // Sony sensor types
               {SENSOR_ICX285AL, "Sony ICX285AL"},
               {SENSOR_ICX285AK, "Sony ICX285AK"},
               {SENSOR_ICX263AL, "Sony ICX263AL"},
               {SENSOR_ICX263AK, "Sony ICX263AK"},
               {SENSOR_ICX274AL, "Sony ICX274AL"},
               {SENSOR_ICX274AK, "Sony ICX274AK"},
               {SENSOR_ICX407AL, "Sony ICX407AL"},
               {SENSOR_ICX407AK, "Sony ICX407AK"},
               {SENSOR_ICX414AL, "Sony ICX414AL"},
               {SENSOR_ICX414AK, "Sony ICX414AK"},
               {SENSOR_ICX407BLA, "Sony ICX407BLA"},

               // Kodak sensor types
               {SENSOR_KAI2000M,   "Kodak KAI2000M"},
               {SENSOR_KAI2000CM,  "Kodak KAI2000CM"},
               {SENSOR_KAI2001M,   "Kodak KAI2001M"},
               {SENSOR_KAI2001CM,  "Kodak KAI2001CM"},
               {SENSOR_KAI2002M,   "Kodak KAI2002M"},
               {SENSOR_KAI2002CM,  "Kodak KAI2002CM"},
               {SENSOR_KAI4010M,   "Kodak KAI4010M"},
               {SENSOR_KAI4010CM,  "Kodak KAI4010CM"},
               {SENSOR_KAI4011M,   "Kodak KAI4011M"},
               {SENSOR_KAI4011CM,  "Kodak KAI4011CM"},
               {SENSOR_KAI4020M,   "Kodak KAI4020M"},
               {SENSOR_KAI4020CM,  "Kodak KAI4020CM"},
               {SENSOR_KAI4021M,   "Kodak KAI4021M"},
               {SENSOR_KAI4021CM,  "Kodak KAI4021CM"},
               {SENSOR_KAI4022M,   "Kodak KAI4022M"},
               {SENSOR_KAI4022CM,  "Kodak KAI4022CM"},
               {SENSOR_KAI11000M,  "Kodak KAI11000M"},
               {SENSOR_KAI11000CM, "Kodak KAI11000CM"},
               {SENSOR_KAI11002M,  "Kodak KAI11002M"},
               {SENSOR_KAI11002CM, "Kodak KAI11002CM"},
               {SENSOR_KAI16000AXA,"Kodak KAI16000AXA"},
               {SENSOR_KAI16000CXA,"Kodak KAI16000CXA"},
               // Mircon sensor types
               {SENSOR_MV13BW,  "Micron MV13BW"},
               {SENSOR_MV13COL, "Micron MV13COL"},
               // Other sensor types
               {SENSOR_TC285SPD, "TI TC285SPD"},
               
               {SENSOR_CYPRESS_RR_V1_BW,  "Cypress Roadrunner V1 BW"},
               {SENSOR_CYPRESS_RR_V1_COL, "Cypress Roadrunner V1 Color"},
               
               {SENSOR_CIS2051_V1_FI_BW, "Fairchild CIS2051 V1 I-Front BW"},
               {SENSOR_CIS2051_V1_BI_BW, "Fairchild CIS2051 V1 I-Back BW"},
               
               {SENSOR_CMOSIS_CMV12000_BW,  "CMOSIS CMV12000 BW"},
               {SENSOR_CMOSIS_CMV12000_COL, "CMOSIS CMV12000 Color"},
               
               {SENSOR_QMFLIM_V2B_BW, "QMFLIM V2B BW"},

               {SENSOR_GPIXEL_2020_ASM,       "GPixel 2020 rev A"},
               {SENSOR_GPIXEL_2020_ESM_REV_A, "GPixel 2020 rev A+ (eSM prototype)"},
               {SENSOR_GPIXEL_2020_BSM,       "GPixel 2020 rev B"},
               {SENSOR_GPIXEL_2020_BSC,       "GPixel 2020 rev B, color"},
               {SENSOR_GPIXEL_2020_ESM_REV_B, "GPixel 2020 rev B, enhanced QE"}

};

const int far PCO_SENSOR_TYPE_DEF_NUM = sizeof(pco_sensor) / sizeof(pco_sensor[0]);

#else
extern const PCO_SENSOR_TYPE_DEF far pco_sensor[];
extern const int far PCO_SENSOR_TYPE_DEF_NUM;
#endif

#define INFO_STRING_CAMERA              1   // Camera name
#define INFO_STRING_SENSOR              2   // Sensor name
#define INFO_STRING_PCO_MATERIALNUMBER  3   // get PCO material number

#define INFO_STRING_BUILD               4   // Build number and date
#define INFO_STRING_PCO_INCLUDE         5   // PCO_Include rev used for building



  // these are defines for interpreting the dwGeneralCaps1 member of the
  // Camera Description structure.
  //
  // How to use the member:
  //
  // if (CameraDescription.dwGeneralCaps1 & GENERALCAPS1_NOISE_FILTER)
  // {
  //   noise filter can be used! ...
  //   ...

#define GENERALCAPS1_NOISE_FILTER                      0x00000001
#define GENERALCAPS1_HOTPIX_FILTER                     0x00000002
#define GENERALCAPS1_HOTPIX_ONLY_WITH_NOISE_FILTER     0x00000004
#define GENERALCAPS1_TIMESTAMP_ASCII_ONLY              0x00000008

#define GENERALCAPS1_DATAFORMAT2X12                    0x00000010
#define GENERALCAPS1_RECORD_STOP                       0x00000020 // Record stop event mode
#define GENERALCAPS1_HOT_PIXEL_CORRECTION              0x00000040
#define GENERALCAPS1_NO_EXTEXPCTRL                     0x00000080 // Ext. Exp. ctrl not possible

#define GENERALCAPS1_NO_TIMESTAMP                      0x00000100
#define GENERALCAPS1_NO_ACQUIREMODE                    0x00000200
#define GENERALCAPS1_DATAFORMAT4X16                    0x00000400
#define GENERALCAPS1_DATAFORMAT5X16                    0x00000800

#define GENERALCAPS1_NO_RECORDER                       0x00001000 // Camera has no internal memory
#define GENERALCAPS1_FAST_TIMING                       0x00002000 // Camera can be set to fast timing mode (PIV)
#define GENERALCAPS1_METADATA                          0x00004000 // Camera can produce metadata
#define GENERALCAPS1_SETFRAMERATE_ENABLED              0x00008000 // Camera allows Set/GetFrameRate cmd

#define GENERALCAPS1_CDI_MODE                          0x00010000 // Camera has Correlated Double Image Mode
#define GENERALCAPS1_CCM                               0x00020000 // Camera has CCM
#define GENERALCAPS1_EXTERNAL_SYNC                     0x00040000 // Camera can be synced externally
#define GENERALCAPS1_NO_GLOBAL_SHUTTER                 0x00080000 // Camera does not support global shutter
#define GENERALCAPS1_GLOBAL_RESET_MODE                 0x00100000 // Camera supports global reset rolling readout
#define GENERALCAPS1_EXT_ACQUIRE                       0x00200000 // Camera supports extended acquire command
#define GENERALCAPS1_FAN_CONTROL                       0x00400000 // Camera supports fan control command

#define GENERALCAPS1_ROI_VERT_SYMM_TO_HORZ_AXIS        0x00800000 // Camera vert.ROI must be symmetrical to horizontal axis
#define GENERALCAPS1_ROI_HORZ_SYMM_TO_VERT_AXIS        0x01000000 // Camera horz.ROI must be symmetrical to vertical axis

#define GENERALCAPS1_COOLING_SETPOINTS                 0x02000000 // Camera has cooling setpoints instead of cooling range

//#define GENERALCAPS_ENHANCE_DESCRIPTOR_x             0x10000000 // reserved for future desc.
//#define GENERALCAPS_ENHANCE_DESCRIPTOR_x             0x20000000 // reserved for future desc.
#define GENERALCAPS1_HW_IO_SIGNAL_DESCRIPTOR           0x40000000
#define GENERALCAPS1_ENHANCED_DESCRIPTOR_2             0x80000000


// dwGeneralCaps2 is for internal use only
// defines for interpreting the dwGeneralCaps2 member are therefore in sc2_defs_intern.h


// dwGeneralCaps3:

#define GENERALCAPS3_HDSDI_1G5                         0x00000001 // with HD/SDI interface, 1.5 GBit data rate
#define GENERALCAPS3_HDSDI_3G                          0x00000002 // with HD/SDI interface, 3.0 GBit data rate
#define GENERALCAPS3_IRIG_B_UNMODULATED                0x00000004 // can evaluate an IRIG B unmodulated signal
#define GENERALCAPS3_IRIG_B_MODULATED                  0x00000008 // can evaluate an IRIG B modulated signal
#define GENERALCAPS3_CAMERA_SYNC                       0x00000010 // has camera sync mode implemented
#define GENERALCAPS3_RESERVED0                         0x00000020 // reserved
#define GENERALCAPS3_HS_READOUT_MODE                   0x00000040 // special fast sensor readout mode 
#define GENERALCAPS3_EXT_SYNC_1HZ_MODE                 0x00000080 // in trigger mode external synchronized, multiples of 
                                                                  //   1 F/s can be set (until now: 100 Hz)


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Camera Temperature Command: --------------------- //
// ------------------------------------------------------------------------ //

#define TEMPERATURE_NOT_AVAILABLE 0x8000


// ------------------------------------------------------------------------ //
// -- Defines for Get / Set Camera Setup: --------------------------------- //
// ------------------------------------------------------------------------ //
// Each bit sets a corresponding switch
  // Camera setup type

  // Camera setup parameter for pco.edge:
#define PCO_EDGE_SETUP_ROLLING_SHUTTER 0x00000001         // rolling shutter
#define PCO_EDGE_SETUP_GLOBAL_SHUTTER  0x00000002         // global shutter
#define PCO_EDGE_SETUP_GLOBAL_RESET    0x00000004         // global reset rolling readout


#define PCO_DIMAX_CS_CAMERA_SETUP_TYPE_RSRVD_0     0x1001  // pco.dimax CS CameraSetup 
#define PCO_DIMAX_CS_CAMERA_SETUP_TYPE_RSRVD_1     0x1002  //   definitions for type parameter
#define PCO_DIMAX_CS_CAMERA_SETUP_TYPE_RSRVD_2     0x1004  //   used for calibration purposes
#define PCO_DIMAX_CS_CAMERA_SETUP_TYPE_RSRVD_3     0x1008
#define PCO_DIMAX_CS_CAMERA_SETUP_TYPE_RSRVD_4     0x1010
#define PCO_DIMAX_CS_CAMERA_SETUP_TYPE_RSRVD_5     0x1020
#define PCO_DIMAX_CS_CAMERA_SETUP_TYPE_RSRVD_6     0x1040
#define PCO_DIMAX_CS_CAMERA_SETUP_TYPE_RSRVD_7     0x1080


// ------------------------------------------------------------------------ //
// -- Defines for Read/Write Mailbox & Get Mailbox Status Commands: ------- //
// ------------------------------------------------------------------------ //

#define MAILBOX_READ_STATUS_NO_VALID_MESSAGE                0x0000
#define MAILBOX_READ_STATUS_MESSAGE_VALID                   0x0001
#define MAILBOX_READ_STATUS_MESSAGE_HAS_BEEN_READ           0x0003

#define MAILBOX_STATUS_NO_VALID_MESSAGE                     0x0000
#define MAILBOX_STATUS_MESSAGE_VALID                        0x0001
#define MAILBOX_STATUS_MESSAGE_HAS_BEEN_READ                0x0003



// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Powersave Mode: --------------------------------- //
// ------------------------------------------------------------------------ //

#define POWERSAVE_MODE_OFF                                  0x0000
#define POWERSAVE_MODE_ON                                   0x0001
#define POWERSAVE_MODE_DO_NOT_USE_BATTERY                   0x0002


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Binning Command: -------------------------------- //
// ------------------------------------------------------------------------ //

#define BINNING_STEPPING_BINARY 0
#define BINNING_STEPPING_LINEAR 1


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Sensor Format Command: -------------------------- //
// ------------------------------------------------------------------------ //

#define SENSORFORMAT_STANDARD 0
#define SENSORFORMAT_EXTENDED 1


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set ADC Operation: ---------------------------------- //
// ------------------------------------------------------------------------ //

#define ADC_MODE_SINGLE 1
#define ADC_MODE_DUAL   2

// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Pixelrate Operation: ---------------------------- //
// ------------------------------------------------------------------------ //

#define PIXELRATE_10MHZ 10000000
#define PIXELRATE_20MHZ 20000000
#define PIXELRATE_40MHZ 40000000
#define PIXELRATE_5MHZ   5000000


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set OffsetMode: ------------------------------------- //
// ------------------------------------------------------------------------ //

#define OFFSET_MODE_AUTO 0
#define OFFSET_MODE_OFF  1


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Double Image Mode Command: ---------------------- //
// ------------------------------------------------------------------------ //

#define DOUBLE_IMAGE_MODE_OFF            0x0000
#define DOUBLE_IMAGE_MODE_ON             0x0001     


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Noise Filter Mode: ------------------------------ //
// ------------------------------------------------------------------------ //

#define NOISE_FILTER_MODE_OFF              0x0000
#define NOISE_FILTER_MODE_ON               0x0001
#define NOISE_FILTER_MODE_REMOVE_HOT_DARK  0x0100


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Hot Pixel Correction: --------------------------- //
// ------------------------------------------------------------------------ //

#define HOT_PIXEL_CORRECTION_OFF           0x0000
#define HOT_PIXEL_CORRECTION_ON            0x0001
#define HOT_PIXEL_CORRECTION_TEST          0x0100  // for test purposes only!


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set DSNU Adjust Mode: ------------------------------- //
// ------------------------------------------------------------------------ //

#define DSNU_ADJUST_MODE_OFF               0x0000
#define DSNU_ADJUST_MODE_AUTO              0x0001
#define DSNU_ADJUST_MODE_USER              0x0002
  //only for internal use!
#define DSNU_ADJUST_MODE_CONT              0x4000
#define DSNU_ADJUST_MODE_STOP              0x8000


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set CDI Mode: --------------------------------------- //
// ------------------------------------------------------------------------ //

#define CDI_MODE_OFF                       0x0000
#define CDI_MODE_ON                        0x0001


// ------------------------------------------------------------------------ //
// -- Defines for Init DSNU Adjustment: ----------------------------------- //
// ------------------------------------------------------------------------ //

#define INIT_DSNU_ADJUSTMENT_OFF           0x0000
#define INIT_DSNU_ADJUSTMENT_ON            0x0001
#define INIT_DSNU_ADJUSTMENT_DARK_MODE     0x0002
#define INIT_DSNU_ADJUSTMENT_AUTO_MODE     0x0003


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Timebase Command: ------------------------------- //
// ------------------------------------------------------------------------ //

#define TIMEBASE_NS 0x0000
#define TIMEBASE_US 0x0001
#define TIMEBASE_MS 0x0002



// ------------------------------------------------------------------------ //
// -- Defines for Get/Set FPS Exposure Mode: ------------------------------ //
// ------------------------------------------------------------------------ //

#define FPS_EXPOSURE_MODE_OFF 0x0000
#define FPS_EXPOSURE_MODE_ON  0x0001


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Framerate: -------------------------------------- //
// ------------------------------------------------------------------------ //

#define SET_FRAMERATE_MODE_AUTO                            0x0000
#define SET_FRAMERATE_MODE_FRAMERATE_HAS_PRIORITY          0x0001
#define SET_FRAMERATE_MODE_EXPTIME_HAS_PRIORITY            0x0002
#define SET_FRAMERATE_MODE_STRICT                          0x0003

#define SET_FRAMERATE_STATUS_OK                            0x0000
#define SET_FRAMERATE_STATUS_FPS_LIMITED_BY_READOUT        0x0001
#define SET_FRAMERATE_STATUS_FPS_LIMITED_BY_EXPTIME        0x0002
#define SET_FRAMERATE_STATUS_EXPTIME_CUT_TO_FRAMETIME      0x0004
#define SET_FRAMERATE_STATUS_NOT_YET_VALIDATED             0x8000
#define SET_FRAMERATE_STATUS_ERROR_SETTINGS_INCONSISTENT   0x8001


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Delay Exposure Timetable Command: --------------- //
// ------------------------------------------------------------------------ //

#define MAX_TIMEPAIRS   16    // max size of time table for 
                              


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Trigger Mode Command: --------------------------- //
// ------------------------------------------------------------------------ //

#define TRIGGER_MODE_AUTOTRIGGER                      0x0000
#define TRIGGER_MODE_SOFTWARETRIGGER                  0x0001
#define TRIGGER_MODE_EXTERNALTRIGGER                  0x0002
#define TRIGGER_MODE_EXTERNALEXPOSURECONTROL          0x0003
#define TRIGGER_MODE_SOURCE_HDSDI                     0x0102
#define TRIGGER_MODE_EXTERNAL_SYNCHRONIZED            0x0004
#define TRIGGER_MODE_FAST_EXTERNALEXPOSURECONTROL     0x0005
#define TRIGGER_MODE_EXTERNAL_CDS                     0x0006
#define TRIGGER_MODE_SLOW_EXTERNALEXPOSURECONTROL     0x0007


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Camera Sync Mode Command: ----------------------- //
// ------------------------------------------------------------------------ //

#define CAMERA_SYNC_MODE_STANDALONE               0x0000
#define CAMERA_SYNC_MODE_MASTER                   0x0001
#define CAMERA_SYNC_MODE_SLAVE                    0x0002

// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Fan Control Command: ---------------------------- //
// ------------------------------------------------------------------------ //

#define FAN_CONTROL_MODE_AUTO                     0x0000
#define FAN_CONTROL_MODE_USER                     0x0001


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Power Down Mode Command: ------------------------ //
// ------------------------------------------------------------------------ //

#define POWERDOWN_MODE_AUTO   0
#define POWERDOWN_MODE_USER   1


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Storage Mode Command: --------------------------- //
// ------------------------------------------------------------------------ //

#define STORAGE_MODE_RECORDER      0
#define STORAGE_MODE_FIFO_BUFFER   1


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Recorder Submode Command: ----------------------- //
// ------------------------------------------------------------------------ //
#define RECORDER_SUBMODE_SEQUENCE     0
#define RECORDER_SUBMODE_RINGBUFFER   1



// ------------------------------------------------------------------------ //
// -- Defines for Set Record Stop Mode: ----------------------------------- //
// ------------------------------------------------------------------------ //
