
#define RECORD_STOP_EVENT_OFF            0x0000    // no delayed stop poss.
#define RECORD_STOP_EVENT_STOP_BY_SW     0x0001    // stop only by sw command
#define RECORD_STOP_EVENT_STOP_EXTERNAL  0x0002    // stop by signat at Acq.

// the following filter modes can be added (just ored to the mode parameter)
// when using external record stop:

#define RECORD_STOP_FILTER_OFF           0x0000    // no additional filter
#define RECORD_STOP_FILTER_1us           0x1000    // pulse length filter   1 us
#define RECORD_STOP_FILTER_10us          0x2000    // pulse length filter  10 us
#define RECORD_STOP_FILTER_100us         0x3000    // pulse length filter 100 us
#define RECORD_STOP_FILTER_1000us        0x4000    // pulse length filter   1 ms

// ------------------------------------------------------------------------ //
// -- Defines for Set Event Monitor Configuration: ------------------------ //
// ------------------------------------------------------------------------ //

#define EVENT_CONFIG_EXPTRIG_RISING            0x0001   
#define EVENT_CONFIG_EXPTRIG_FALLING           0x0002   
#define EVENT_CONFIG_ACQENBL_RISING            0x0004   
#define EVENT_CONFIG_ACQENBL_FALLING           0x0008   


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Acquire Mode Command: --------------------------- //
// ------------------------------------------------------------------------ //

#define ACQUIRE_MODE_AUTO                    0x0000   // normal auto mode
#define ACQUIRE_MODE_EXTERNAL                0x0001   // ext. as enable signal
#define ACQUIRE_MODE_EXTERNAL_FRAME_TRIGGER  0x0002   // ext. as frame trigger
#define ACQUIRE_MODE_USE_FOR_LIVEVIEW        0x0003   // use acq. for live view
#define ACQUIRE_MODE_IMAGE_SEQUENCE          0x0004   // use acq. for image sequence

// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Acquire Mode Command: --------------------------- //
// ------------------------------------------------------------------------ //

#define ACQUIRE_CONTROL_OFF                  0x0000     // use external signal
#define ACQUIRE_CONTROL_FORCE_LOW            0x0001     // force aquire  low
#define ACQUIRE_CONTROL_FORCE_HIGH           0x0002     // force acquire high



// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Timestamp Mode Command: ------------------------- //
// ------------------------------------------------------------------------ //

#define TIMESTAMP_MODE_OFF              0
#define TIMESTAMP_MODE_BINARY           1
#define TIMESTAMP_MODE_BINARYANDASCII   2
#define TIMESTAMP_MODE_ASCII            3


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Metadata Mode: ---------------------------------- //
// ------------------------------------------------------------------------ //

#define METADATA_MODE_OFF               0x0000
#define METADATA_MODE_ON                0x0001
#define METADATA_MODE_TEST              0x8000


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set PIV Mode Command: ------------------------------- //
// ------------------------------------------------------------------------ //

#define FAST_TIMING_MODE_OFF            0x0000
#define FAST_TIMING_MODE_ON             0x0001     



// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Bit Alignment: ---------------------------------- //
// ------------------------------------------------------------------------ //

#define BIT_ALIGNMENT_MSB               0
#define BIT_ALIGNMENT_LSB               1
#define BIT_ALIGNMENT_MID               0x1000  // for 3x8 bit CL (Hamamatsu)


// ------------------------------------------------------------------------ //
// -- Defines for GetSensorSignalStatus: ---------------------------------- //
// ------------------------------------------------------------------------ //

#define SIGNAL_STATE_BUSY               0x00000001
#define SIGNAL_STATE_IDLE               0x00000002
#define SIGNAL_STATE_EXP                0x00000004
#define SIGNAL_STATE_READ               0x00000008
#define SIGNAL_STATE_FIFO_FULL          0x00000010


// ------------------------------------------------------------------------ //
// -- Defines for Play Images from Segment Modes: ------------------------- //
// ------------------------------------------------------------------------ //

#define PLAY_IMAGES_MODE_OFF                                  0x0000
#define PLAY_IMAGES_MODE_FAST_FORWARD                         0x0001
#define PLAY_IMAGES_MODE_FAST_REWIND                          0x0002
#define PLAY_IMAGES_MODE_SLOW_FORWARD                         0x0003
#define PLAY_IMAGES_MODE_SLOW_REWIND                          0x0004
#define PLAY_IMAGES_MODE_REPLAY_AT_END                        0x0100
#define PLAY_IMAGES_MODE_EXT_CONTROL                          0x4000

#define PLAY_IMAGES_MODE_IS_FORWARD                           0x0001

#define PLAY_POSITION_STATUS_NO_PLAY_ACTIVE                   0x0000
#define PLAY_POSITION_STATUS_VALID                            0x0001


// ------------------------------------------------------------------------ //
// -- Defines for Color Chips    ------------------------------------------ //
// ------------------------------------------------------------------------ //

#define COLOR_RED     0x01
#define COLOR_GREENA  0x02
#define COLOR_GREENBA 0x03
#define COLOR_BLUE    0x04

#define COLOR_CYAN    0x05
#define COLOR_MAGENTA 0x06
#define COLOR_YELLOWA 0x07

#define PATTERN_BAYER 0x01

// ------------------------------------------------------------------------ //
// -- Defines for Modulate mode  ------------------------------------------ //
// ------------------------------------------------------------------------ //

#define MODULATECAPS_MODULATE                 0x00000001
#define MODULATECAPS_MODULATE_EXT_TRIG        0x00000002
#define MODULATECAPS_MODULATE_EXT_EXP         0x00000004
#define MODULATECAPS_MODULATE_ACQ_EXT_FRAME   0x00000008


// ------------------------------------------------------------------------ //
// -- Defines for Get/Set Interface Output Format: ------------------------ //
// ------------------------------------------------------------------------ //

//obsolete: use wInterface definitions below!
#define INTERFACE_HDSDI                                           0x0001
#define INTERFACE_CL_SCCMOS                                       0x0002
#define INTERFACE_USB_PIXELFLY                                    0x0003

//wInterface
#define SET_INTERFACE_HDSDI                                       0x0001 // dimax
#define SET_INTERFACE_CAMERALINK                                  0x0002 // sccmos
#define SET_INTERFACE_USB                                         0x0003 // usb pixelfly
#define SET_INTERFACE_DVI                                         0x0004 // dimax
#define SET_INTERFACE_CLHS                                        0x0005 // EdgeHS

//wFormat
#define HDSDI_FORMAT_OUTPUT_OFF                                   0x0000
#define HDSDI_FORMAT_1080P25_SINGLE_LINK_RGB                      0x0001
#define HDSDI_FORMAT_1080P25_SINGLE_LINK_RAW10BIT_2_IMAGES        0x0002
#define HDSDI_FORMAT_1080P50_DUAL_LINK_RGB                        0x0003
#define HDSDI_FORMAT_1080P50_DUAL_LINK_RAW10BIT_2_IMAGES          0x0004
#define HDSDI_FORMAT_2048x1536_SINGLE_LINK_RAW12BIT               0x0005
#define HDSDI_FORMAT_2048x1536_DUAL_LINK_RAW12BIT                 0x0006
#define HDSDI_FORMAT_720P50_SINGLE_LINK_RGB                       0x0007

#define HDSDI_FORMAT_720P50_SINGLE_LINK_RAW10BIT_2_IMAGES         0x0008
#define HDSDI_FORMAT_1080P25_SINGLE_LINK_RAW10BIT_1_IMAGE         0x0009
#define HDSDI_FORMAT_720P50_SINGLE_LINK_RAW10BIT_1_IMAGE          0x000A
#define HDSDI_FORMAT_1080P30_SINGLE_LINK_RGB                      0x000B
#define HDSDI_FORMAT_1080P2997_SINGLE_LINK_RGB                    0x000C
#define HDSDI_FORMAT_1080P24_SINGLE_LINK_RGB                      0x000D
#define HDSDI_FORMAT_1080P2398_SINGLE_LINK_RGB                    0x000E
#define HDSDI_FORMAT_1080P60_SINGLE_LINK_RAW10BIT_2_IMAGES        0x000F

#define HDSDI_FORMAT_1080P5994_SINGLE_LINK_RAW10BIT_2_IMAGES      0x0010
#define HDSDI_FORMAT_1080P48_SINGLE_LINK_RAW10BIT_2_IMAGES        0x0011
#define HDSDI_FORMAT_1080P4795_SINGLE_LINK_RAW10BIT_2_IMAGES      0x0012
#define HDSDI_FORMAT_1080P48_DUAL_LINK_RGB                        0x0013
#define HDSDI_FORMAT_1080P4795_DUAL_LINK_RGB                      0x0014
#define HDSDI_FORMAT_1080P96_DUAL_LINK_RAW10BIT_2_IMAGES          0x0015
#define HDSDI_FORMAT_1080P9550_DUAL_LINK_RAW10BIT_2_IMAGES        0x0016
#define HDSDI_FORMAT_720P24_SINGLE_LINK_RGB                       0x0017

#define HDSDI_FORMAT_720P2398_SINGLE_LINK_RGB                     0x0018
#define HDSDI_FORMAT_720P48_SINGLE_LINK_RAW10BIT_2_IMAGES         0x0019
#define HDSDI_FORMAT_720P4795_SINGLE_LINK_RAW10BIT_2_IMAGES       0x001A
#define HDSDI_FORMAT_1080P30_SINGLE_LINK_RAW10BIT_1_IMAGE         0x001B
#define HDSDI_FORMAT_1080P2997_SINGLE_LINK_RAW10BIT_1_IMAGE       0x001C
#define HDSDI_FORMAT_1080P24_SINGLE_LINK_RAW10BIT_1_IMAGE         0x001D
#define HDSDI_FORMAT_1080P2398_SINGLE_LINK_RAW10BIT_1_IMAGE       0x001E
#define HDSDI_FORMAT_1080P60_DUAL_LINK_RGB                        0x001F

#define HDSDI_FORMAT_1080P120_DUAL_LINK_RAW10BIT_2_IMAGES         0x0020
#define HDSDI_FORMAT_720P2398_SINGLE_LINK_RAW10BIT_1_IMAGE        0x0021
#define HDSDI_FORMAT_720P24_SINGLE_LINK_RAW10BIT_1_IMAGE          0x0022
#define HDSDI_FORMAT_720P25_SINGLE_LINK_RAW10BIT_1_IMAGE          0x0023
#define HDSDI_FORMAT_720P25_SINGLE_LINK_RAW10BIT_2_IMAGES         0x0024
#define HDSDI_FORMAT_720P2997_SINGLE_LINK_RAW10BIT_1_IMAGE        0x0025
#define HDSDI_FORMAT_720P2997_SINGLE_LINK_RAW10BIT_2_IMAGES       0x0026
#define HDSDI_FORMAT_720P5994_SINGLE_LINK_RAW10BIT_1_IMAGE        0x0027
#define HDSDI_FORMAT_720P5994_SINGLE_LINK_RAW10BIT_2_IMAGES       0x0028

#define HDSDI_FORMAT_OPTIONS_TIMECODE_OUT                         0x0001
#define HDSDI_FORMAT_OPTIONS_RECORD_ENABLE_FLAG                   0x0002
#define HDSDI_FORMAT_OPTIONS_VIEWER_3G_OUT                        0x0040
#define HDSDI_FORMAT_OPTIONS_LINKAD_3G_OUT                        0x0080


// ------------------------------------------------------------------------ //
// -- Defines for Get Interface Status for HD/SDI: ------------------------ //
// ------------------------------------------------------------------------ //

#define HDSDI_STATUS_OUTPUT_ACTIVE                             0x00000001
#define HDSDI_STATUS_GENLOCK_AVAIL                             0x00000002
#define HDSDI_STATUS_GENLOCK_LOCKED                            0x00000004
#define HDSDI_STATUS_RECORD_IDLE                               0x00000008
#define HDSDI_STATUS_RECORD_ON                                 0x00000010
#define HDSDI_STATUS_PLAY_ACTIVE                               0x00000020

#define HDSDI_ERROR_INIT_FAILED                                0x00000001
#define HDSDI_ERROR_NO_RESPONSE                                0x00000002
#define HDSDI_ERROR_GENLOCK_PLL_UNLOCKED                       0x00000004
#define HDSDI_ERROR_GENLOCK_WRONG_FORMAT                       0x00000008


// ------------------------------------------------------------------------ //
// -- Defines for Get White Balance Status: ------------------------------- //
// ------------------------------------------------------------------------ //

#define WHITE_BALANCE_STATUS_DEFAULT                              0x0000
#define WHITE_BALANCE_STATUS_IN_PROGRESS                          0x0100
#define WHITE_BALANCE_STATUS_SUCCESS                              0x0001
#define WHITE_BALANCE_STATUS_TIMEOUT                              0x8001
#define WHITE_BALANCE_STATUS_FAILED                               0x8002


// ------------------------------------------------------------------------ //
// -- Defines for Get / Set Color Settings: ------------------------------- //
// ------------------------------------------------------------------------ //

#define COLOR_PROC_OPTIONS_COLOR_REFINE                           0x0001
//#define COLOR_PROC_OPTIONS_USE_REC709                             0x0002
//#define COLOR_PROC_OPTIONS_USE_LOG90                              0x0004

#define COLOR_SETTINGS_LUT_NOT_USED                               0x0000                             
#define COLOR_SETTINGS_LUT_REC709                                 0x1001
#define COLOR_SETTINGS_LUT_LOG90                                  0x1002


// ------------------------------------------------------------------------ //
// -- Defines for Get / Set Image Transfer Mode: -------------------------- //
// ------------------------------------------------------------------------ //

#define IMAGE_TRANSFER_MODE_STANDARD           0x0000 
#define IMAGE_TRANSFER_MODE_SCALED_XY_8BIT     0x0001 
#define IMAGE_TRANSFER_MODE_CUTOUT_XY_8BIT     0x0002 
#define IMAGE_TRANSFER_MODE_FULL_RGB_24BIT     0x0003 
#define IMAGE_TRANSFER_MODE_BIN_SCALED_8BIT_BW 0x0004 
#define IMAGE_TRANSFER_MODE_BIN_SCALED_8BIT_COLOR 0x0005 
#define IMAGE_TRANSFER_MODE_TEST_ONLY          0x8000



#define SCCMOS_FORMAT_TOP_BOTTOM                                  0x0000  //Mode E
#define SCCMOS_FORMAT_TOP_CENTER_BOTTOM_CENTER                    0x0100  //Mode A
#define SCCMOS_FORMAT_CENTER_TOP_CENTER_BOTTOM                    0x0200  //Mode B
#define SCCMOS_FORMAT_CENTER_TOP_BOTTOM_CENTER                    0x0300  //Mode C
#define SCCMOS_FORMAT_TOP_CENTER_CENTER_BOTTOM                    0x0400  //Mode D

#define USB_FORMAT_14BIT                                    0x0000
#define USB_FORMAT_12BIT                                    0x0001

// ------------------------------------------------------------------------ //
// -- Defines for Get Image Timing: --------------------------------------- //
// ------------------------------------------------------------------------ //

#define IMAGE_TIMING_NOT_APPLICABLE                           0xFFFFFFFF

// ------------------------------------------------------------------------ //
// -- Defines for Lookup Table: ------------------------------------------- //
// ------------------------------------------------------------------------ //

#define LOOKUPTABLE_FORMAT_8BIT   0x0001
#define LOOKUPTABLE_FORMAT_12BIT  0x0002
#define LOOKUPTABLE_FORMAT_16BIT  0x0004
#define LOOKUPTABLE_FORMAT_24BIT  0x0008
#define LOOKUPTABLE_FORMAT_32BIT  0x0010
#define LOOKUPTABLE_FORMAT_AUTO   0x8000


// ------------------------------------------------------------------------ //
// -- Defines for Cooling Setpoints---------------------------------------- //
// ------------------------------------------------------------------------ //

#define COOLING_SETPOINTS_BLOCKSIZE 10

// ------------------------------------------------------------------------ //
// -- Defines for Linetiming   -------------------------------------------- //
// ------------------------------------------------------------------------ //

#define CMOS_LINETIMING_PARAM_OFF  0x0000
#define CMOS_LINETIMING_PARAM_ON   0x0001

// ------------------------------------------------------------------------ //
// -- Defines for HWIO Signal Timing: ------------------------------------- //
// ------------------------------------------------------------------------ //

// Hardware IO Signals definition
// SIGNAL options definitions (up to 16 different defines)
#define SIGNAL_DEF_ENABLE   0x00000001 // Signal can be enabled/disabled
#define SIGNAL_DEF_OUTPUT   0x00000002 // Signal is a status signal (output)
#define SIGNAL_DEF_MASK     0x000000FF // Signal options mask

// SIGNAL Type definitions (up to 16 different types)
#define SIGNAL_TYPE_TTL     0x00000001 // Signal can be switched to TTL level
// (0V to 0.8V, 2V to VCC, VCC is 4.75V to 5.25V)
#define SIGNAL_TYPE_HL_SIG  0x00000002 // Signal can be switched to high level signal
// (0V to 5V, 10V to VCC, VCC is 56V)
#define SIGNAL_TYPE_CONTACT 0x00000004 // Signal can be switched to contact level
#define SIGNAL_TYPE_RS485   0x00000008 // Signal can be switched to RS485 level
#define SIGNAL_TYPE_MASK    0x0000FFFF // Signal type mask

// SIGNAL Polarity definitions (up to 16 different types)
#define SIGNAL_POL_HIGH     0x00000001 // Signal can be switched to sense low level
#define SIGNAL_POL_LOW      0x00000002 // Signal can be switched to sense high level
#define SIGNAL_POL_RISE     0x00000004 // Signal can be switched to sense rising edge
#define SIGNAL_POL_FALL     0x00000008 // Signal can be switched to sense falling edge
#define SIGNAL_POL_MASK     0x0000FFFF // Signal polarity mask

// SIGNAL Filter settings definitions (up to 16 different filter)
#define SIGNAL_FILTER_OFF   0x00000001 // Filter can be switched off (t > ~65ns)
#define SIGNAL_FILTER_MED   0x00000002 // Filter can be switched to medium (t > 1us)
#define SIGNAL_FILTER_HIGH  0x00000004 // Signal can be switched to high (t > 100ms)
#define SIGNAL_FILTER_MASK  0x0000FFFF // Signal polarity mask

//--HW IO TYPE (HW-IO descriptor flags, see HW-IO descriptor
#define HW_IO_SIGNAL_TIMING_0_AVAILABLE   0x10
#define HW_IO_SIGNAL_TIMING_1_AVAILABLE   0x20
#define HW_IO_SIGNAL_TIMING_2_AVAILABLE   0x40
#define HW_IO_SIGNAL_TIMING_3_AVAILABLE   0x80

// Signal type for parameter selection
#define HW_IO_SIGNAL_TIMING_TYPE_TRIGGER        0x00000001
#define HW_IO_SIGNAL_TIMING_TYPE_ACQUIRE        0x00000002
#define HW_IO_SIGNAL_TIMING_TYPE_BUSY           0x00000003
#define HW_IO_SIGNAL_TIMING_TYPE_EXPOSURE       0x00000004
#define HW_IO_SIGNAL_TIMING_TYPE_READ           0x00000005
#define HW_IO_SIGNAL_TIMING_TYPE_SYNC           0x00000006
#define HW_IO_SIGNAL_TIMING_TYPE_EXPOSURE_RS    0x00000007

// Parameter definitions (defines timing behaviour)
//--Rolling Shutter Exposure Configurations (HW_IO_SIGNAL_TIMING_TYPE_EXPOSURE_RS)
#define HW_IO_SIGNAL_TIMING_EXPOSURE_RS_FIRSTLINE   0x00000001
#define HW_IO_SIGNAL_TIMING_EXPOSURE_RS_GLOBAL      0x00000002
#define HW_IO_SIGNAL_TIMING_EXPOSURE_RS_LASTLINE    0x00000003
#define HW_IO_SIGNAL_TIMING_EXPOSURE_RS_ALLLINES    0x00000004
// ATTENTION: Set timing max value at least to the biggest signal timing
// value in the parameters list
#define HW_IO_SIGNAL_TIMING_MAX_VALUE               0x00000010

// ------------------------------------------------------------------------ //
// -- Defines for HW LED Signal ------------------------------------------- //
// ------------------------------------------------------------------------ //

#define HW_LED_SIGNAL_OFF                               0x00000000
#define HW_LED_SIGNAL_ON                                0xFFFFFFFF

// ------------------------------------------------------------------------ //
// -- Defines for pco.flim Commands --------------------------------------- //
// ------------------------------------------------------------------------ //

// command: SET_FLIM_MODULATION_PARAMS

#define FLIM_MODULATION_SOURCE_INTERN        0x0000 // camera creates the modulation (master)
#define FLIM_MODULATION_SOURCE_EXTERN        0x0001 // camera tries to synchronize to an external source

#define FLIM_MODULATION_OUTPUT_WAVEFORM_NONE 0x0000 // modulation output disabled
#define FLIM_MODULATION_OUTPUT_WAVEFORM_SINE 0x0001 // sinusoidal
#define FLIM_MODULATION_OUTPUT_WAVEFORM_RECT 0x0002 // rectangular

// command: SET_FLIM_PHASE_SEQUENCE_PARAMS

#define FLIM_PHASE_MANUAL_SHIFTING           0x0000
#define FLIM_PHASE_NUMBER_2                  0x0001
#define FLIM_PHASE_NUMBER_4                  0x0002
#define FLIM_PHASE_NUMBER_8                  0x0003
#define FLIM_PHASE_NUMBER_16                 0x0004

#define FLIM_PHASE_SYMMETRY_SINGULAR         0x0000
#define FLIM_PHASE_SYMMETRY_TWICE            0x0001

#define FLIM_PHASE_ORDER_ASCENDING           0x0000
#define FLIM_PHASE_ORDER_OPPOSITE            0x0001

#define FLIM_TAP_SELECT_BOTH                 0x0000
#define FLIM_TAP_SELECT_0                    0x0001
#define FLIM_TAP_SELECT_180                  0x0002

// command: SET_FLIM_IMAGE_PROCESSING_FLOW

#define FLIM_ASYMMETRY_CORRECTION_OFF        0x0000
#define FLIM_ASYMMETRY_CORRECTION_AVERAGE    0x0001

#define FLIM_OUTPUT_MODE_MULT_X2_FLAG        0x0001 // pixel raw values are multiplied by two


#endif
 
// ------------------------------< end of file >--------------------------- //


//-----------------------------------------------------------------//
// Name        | sc2_drv_struct.h            | Type: ( ) source    //
//-------------------------------------------|       (*) header    //
// Project     | SC2                         |       ( ) others    //
//-----------------------------------------------------------------//
// Platform    | WINDOWS 2000/XP                                   //
//-----------------------------------------------------------------//
// Environment | Microsoft Visual C++ 6.0                          //
//             |                                                   //
//-----------------------------------------------------------------//
// Purpose     | SC2 - header with structures                      //
//             | used from 1394.dll, cameralink.dll's              //
//             | and SC2_Cam.dll                                   //
//-----------------------------------------------------------------//
// Author      | MBL, PCO AG                                       //
//-----------------------------------------------------------------//
// Revision    | rev. 0.30 rel. 0.00                               //
//-----------------------------------------------------------------//
// Notes       |                                                   //
//             |                                                   //
//             |                                                   // 
//-----------------------------------------------------------------//
// (c) 2003 PCO AG * Donaupark 11 *                                //
// D-93309      Kelheim / Germany * Phone: +49 (0)9441 / 2005-0 *  //
// Fax: +49 (0)9441 / 2005-20 * Email: info@pco.de                 //
//-----------------------------------------------------------------//


//-----------------------------------------------------------------//
// Revision History:                                               //
//-----------------------------------------------------------------//
// Rev.:     | Date:      | Changed:                               //
// --------- | ---------- | ---------------------------------------//
//  0.30     | 17.12.2004 |  new file                              //
//           | 22.02.2005 |  new define REALSIZE                   //
// --------- | ---------- | ---------------------------------------//
//  1.00     | 18.09.2013 |  MBL                                   //
//           |            |  new struct PCO_SC2_SOFTROI_PARAM      //
//           |            |  new define SOFTROI_META_ENABLED       //
//-----------------------------------------------------------------//
//  0.0x     | xx.xx.200x |                                        //
//-----------------------------------------------------------------//

#ifndef  SC2_DRV_STRUCT_H
#define  SC2_DRV_STRUCT_H

//default values
#define PCO_SC2_DEF_BLOCK_SIZE 512
#define PCO_SC2_MIN_COMMAND_SIZE 5

#define PCO_SC2_COMMAND_TIMEOUT 200
#define PCO_SC2_IMAGE_TIMEOUT   1500
#define PCO_SC2_IMAGE_TIMEOUT_L 3000

//timeout values in ms
typedef struct _PCO_SC2_TIMEOUTS {
   unsigned int command;
   unsigned int image;
   unsigned int transfer;
}PCO_SC2_TIMEOUTS;


#define PCO_SC2_CL_ONLY_SERIAL_INIT 0x00001000
#define PCO_SC2_CL_CLSER_NAME       0x00002000
#define PCO_SC2_CL_CONFIG_NAME      0x00004000
#define PCO_SC2_CL_NO_INIT_COMMAND  0x00008000
#define PCO_SC2_CL_USE_COMPORTS     0x00000100

#define PCO_SC2_FW_REALSIZE         0x00010000

typedef struct _SC2_OpenStruct {
  char* clser_file_name;
  char* config_file_name;
  void* dummy1;
  void* dummy2;
  void* dummy3;
  DWORD dummy[5];
} SC2_OpenStruct;

typedef struct _PCO_SC2_IMAGE_PARAM {
 unsigned int width;
 unsigned int height;
 unsigned int xoff;
 unsigned int yoff;
}PCO_SC2_IMAGE_PARAM;

typedef struct _PCO_SC2_SOFTROI_PARAM {
/*
   unsigned int width;       //camera width (same as width in PCO_SC2_IMAGE_PARAM)
   unsigned int height;      //camera height (same as height in PCO_SC2_IMAGE_PARAM)
   unsigned int xskip;       //Pixels to skip at start of line
   unsigned int yskip;       //Lines to skip 
   unsigned int xsize;       //Pixels to copy
   unsigned int ysize;       //Lines to copy
*/
   unsigned int camera_width; //camera width (same as width in PCO_SC2_IMAGE_PARAM)
   unsigned int camera_height;//camera height (same as height in PCO_SC2_IMAGE_PARAM)
   unsigned int xskip_softroi;//Pixels to skip at start of line
   unsigned int yskip_softroi;//Lines to skip 
   unsigned int xsize_softroi;//Pixels to copy
   unsigned int ysize_softroi;//Lines to copy
   unsigned int flag;         //Flags 
   unsigned int meta_off_camera;     //offset of meta_data start in lines in camera buffer
//   unsigned int meta_lines_camera;   //number of additional lines for meta_data in camera buffer
   unsigned int meta_lines_softroi;  //number of additional lines for meta_data in output buffer
   unsigned int dummy;
   unsigned int dummy1[16];
}PCO_SC2_SOFTROI_PARAM;

#define SOFTROI_META_ENABLED   0x00000001  //camera does transfer meta_data in image
#define SOFTROI_DOUBLE_ENABLED 0x00000002  //camera does transfer double image

#define SOFTROI_TIMESTAMP_MASK      0x00000030
#define SOFTROI_TIMESTAMP_BINARY_ON 0x00000010
#define SOFTROI_TIMESTAMP_ASCII_ON  0x00000020

#define SOFTROI_TIMESTAMP_RAW       0x00000040

#define SOFTROI_TIMESTAMP_BINARY_SIZE   14
#define SOFTROI_TIMESTAMP_ASCII_OFFSET  20
#define SOFTROI_TIMESTAMP_ASCII_SIZE   272
#define SOFTROI_TIMESTAMP_ASCII_LINES 8

#define SOFTROI_TIMESTAMP_BINARY_SIZE_RAW   11
#define SOFTROI_TIMESTAMP_ASCII_OFFSET_RAW  15
#define SOFTROI_TIMESTAMP_ASCII_SIZE_RAW   204



//internal message levels for dll
#define INTERNAL_1_M 0x00010000
#define INTERNAL_2_M 0x00020000
#define INTERNAL_3_M 0x00040000
#define INTERNAL_4_M 0x00080000


//defines for general bits
#define NO_START_IMAGE        0x00000001
#define SET_LSB               0x00000002
#define LOSTIMAGE_ERROR       0x00000004
#define ONLY_VALID_IMA_EVENT  0x00000008

#define PRE_ALLOC_BUFFER      0x00000010
#define PRE_ALLOC_BUFFER_OFF  0x00000020

#define ME4_FAST_STOP         0x00010000
#define ME4_NO_HS             0x00020000
#define ME4_NO_FAST_STOP      0x00040000

#define GLOBAL_SHUTTER_SWCALC 0x00008000

#define FW_FREE_TRANSFER      0x00010000

#endif
//-----------------------------------------------------------------//
// Name        | SC2_SDKAddendum.h           | Type: ( ) source    //
//-------------------------------------------|       (*) header    //
// Project     | PCO                         |       ( ) others    //
//-----------------------------------------------------------------//
// Platform    | PC                                                //
//-----------------------------------------------------------------//
// Environment | Visual 'C++'                                      //
//-----------------------------------------------------------------//
// Purpose     | PCO - SC2 Camera DLL Functions                    //
//-----------------------------------------------------------------//
// Author      | MBL, PCO AG                                       //
//-----------------------------------------------------------------//
// Revision    |  rev. 1.06 rel. 1.06                              //
//-----------------------------------------------------------------//

//-----------------------------------------------------------------//
// Notes       |                                                   //
//-----------------------------------------------------------------//
// (c) 2002 PCO AG * Donaupark 11 *                                //
// D-93309      Kelheim / Germany * Phone: +49 (0)9441 / 2005-0 *  //
// Fax: +49 (0)9441 / 2005-20 * Email: info@pco.de                 //
//-----------------------------------------------------------------//


//-----------------------------------------------------------------//
// Revision History:                                               //
//-----------------------------------------------------------------//
// Rev.:     | Date:      | Changed:                               //
// --------- | ---------- | ---------------------------------------//
//  1.02     | 04.05.2004 | new file added to SDK, FRE, MBL        //
//           |            |                                        //
//-----------------------------------------------------------------//
//  1.04     | 16.06.2005 | some defines MBL                       //
//           |            |                                        //
//-----------------------------------------------------------------//
//  1.05     | 27.02.2006 |  Added PCO_GetCameraName, FRE          //
//-----------------------------------------------------------------//
//  1.06     | 29.09.2008 |  Added PCO_GIGE_TRANSFER_PARAM, FRE    //
//-----------------------------------------------------------------//
//  1.07     | 23.11.2011 |  Added IMAGE_TRANSFER_MODE_PARAM, VTI  //
//-----------------------------------------------------------------//

#if !defined SC2_SDKADDENDUM_H
#define SC2_SDKADDENDUM_H

typedef struct _PCO1394_ISO_PARAMS
{
   DWORD bandwidth_bytes;         // number of byte to allocate on the bus for isochronous transfers
                                  // 0...4096; recommended: 2048 (default 4096)
   DWORD speed_of_isotransfer;    // speed to use when allocating bandwidth
                                  // 1,2,4; recommended: 4 (default 4)
   DWORD number_of_isochannel;    // number of channel to use on the bus
                                  // 0...7 + additional bits (default AUTO_CHANNEL)
   DWORD number_of_iso_buffers;   // number of buffers to use when allocating transfer resources
                                  // depends on image size, auto adjusted from the driver
                                  // 16...256; recommended: 32 (default 32)
   DWORD byte_per_isoframe;       // 0...4096; information only
}PCO1394_ISO_PARAM;

#define PCO_1394_AUTO_CHANNEL   0x200
#define PCO_1394_HOLD_CHANNEL   0x100

#define PCO_1394_DEFAULT_BANDWIDTH 4096
#define PCO_1394_DEFAULT_SPEED 4
#define PCO_1394_DEFAULT_CHANNEL 0x00
#define PCO_1394_DEFAULT_ISOBUFFER 32

typedef struct _PCO_1394_TRANSFER_PARAM
{
   PCO1394_ISO_PARAM iso_param;
   DWORD bytes_avaiable;       //bytes avaiable on the bus 
   DWORD dummy[15];            //for future use, set to zero
}PCO_1394_TRANSFER_PARAM;


typedef struct _PCO_SC2_CL_TRANSFER_PARAMS
{
   DWORD   baudrate;         // serial baudrate: 9600, 19200, 38400, 56400, 115200
   DWORD   ClockFrequency;   // Pixelclock in Hz: 40000000,66000000,80000000
   DWORD   CCline;           // Usage of CameraLink CC1-CC4 lines, use value returned by Get 
   DWORD   DataFormat;       // see defines below, use value returned by Get
   DWORD   Transmit;         // single or continuous transmitting images, 0-single, 1-continuous
}PCO_SC2_CL_TRANSFER_PARAM;

#define PCO_CL_DEFAULT_BAUDRATE 9600
#define PCO_CL_PIXELCLOCK_40MHZ 40000000
#define PCO_CL_PIXELCLOCK_66MHZ 66000000
#define PCO_CL_PIXELCLOCK_80MHZ 80000000
#define PCO_CL_PIXELCLOCK_32MHZ 32000000
#define PCO_CL_PIXELCLOCK_64MHZ 64000000

#define PCO_CL_CCLINE_LINE1_TRIGGER           0x01
#define PCO_CL_CCLINE_LINE2_ACQUIRE           0x02
#define PCO_CL_CCLINE_LINE3_HANDSHAKE         0x04
#define PCO_CL_CCLINE_LINE4_TRANSMIT_ENABLE   0x08

#define PCO_CL_DATAFORMAT_MASK   0x0F
#define PCO_CL_DATAFORMAT_1x16   0x01
#define PCO_CL_DATAFORMAT_2x12   0x02
#define PCO_CL_DATAFORMAT_3x8    0x03
#define PCO_CL_DATAFORMAT_4x16   0x04
#define PCO_CL_DATAFORMAT_5x16   0x05
#define PCO_CL_DATAFORMAT_5x12   0x07     //extract data to 12bit
#define PCO_CL_DATAFORMAT_10x8   0x08
#define PCO_CL_DATAFORMAT_5x12L  0x09     //extract data to 16Bit
#define PCO_CL_DATAFORMAT_5x12R  0x0A     //without extract


#define SCCMOS_FORMAT_MASK                                        0xFF00
#define SCCMOS_FORMAT_TOP_BOTTOM                                  0x0000  //Mode E 
#define SCCMOS_FORMAT_TOP_CENTER_BOTTOM_CENTER                    0x0100  //Mode A
#define SCCMOS_FORMAT_CENTER_TOP_CENTER_BOTTOM                    0x0200  //Mode B
#define SCCMOS_FORMAT_CENTER_TOP_BOTTOM_CENTER                    0x0300  //Mode C
#define SCCMOS_FORMAT_TOP_CENTER_CENTER_BOTTOM                    0x0400  //Mode D 

#define PCO_CL_TRANSMIT_ENABLE  0x01
#define PCO_CL_TRANSMIT_LONGGAP 0x02


typedef struct _PCO_USB_TRANSFER_PARAM {
   unsigned int   MaxNumUsb;           // defines packet size 
   unsigned int   ClockFrequency;      // Pixelclock in Hz: 40000000,66000000,80000000
   unsigned int   Transmit;            // single or continuous transmitting images, 0-single, 1-continuous
   unsigned int   UsbConfig;           // 0=bulk_image, 1=iso_image
   unsigned int   ImgTransMode;        // Bit0: 14Bit Image
                                       // Bit1: 12Bit Image (obsolete)
                                       // Bit2: VTI coding enabled
                                       // Bit3: 1024Byte padding enabled
}PCO_USB_TRANSFER_PARAM;

#define PCO_GIGE_PAKET_RESEND    0x00000001
#define PCO_GIGE_BURST_MODE      0x00000002
#define PCO_GIGE_MAXSPEED_MODE   0x00000004
#define PCO_GIGE_DEBUG_MODE		 0x00000008
#define PCO_GIGE_BW_SAME2ALL	 0x00000000
#define PCO_GIGE_BW_ALL2MAX		 0x00000010
#define PCO_GIGE_BW_2ACTIVE		 0x00000020
#define PCO_GIGE_DATAFORMAT_1x8  0x01080001
#define PCO_GIGE_DATAFORMAT_1x16 0x01100007
#define PCO_GIGE_DATAFORMAT_3x8  0x02180015
#define PCO_GIGE_DATAFORMAT_4x8  0x02200016

typedef struct _PCO_GIGE_TRANSFER_PARAM
{
  DWORD dwPacketDelay;                 // delay between image stream packets (number of clockticks of a 100MHz clock;
                                       // default: 2000 -> 20us, range: 0 ... 8000 -> 0 ... 80us)
  DWORD dwResendPercent;               // Number of lost packets of image in percent. If more packets got lost,
                                       // complete image will be resent or image transfer is failed (default 30).
  DWORD dwFlags;                       // Bit 0:   Set to enable packet resend
                                       // Bit 1:   Set to enable Burst_mode
									   // Bit 2:   Set to enable Max Speed Modus
									   // Bit 3:   Set to enable Camera Debug Mode
									   // Bit 4-7:   Reserved
									   // Bit 4:   camera Sync Mutex
									   // Bit 5:   Enable Jumbo Frames
  									   // Bit 6:   Enable Intermediate Driver
								       // Bit 8-11:0: Bandwidth is devided by number of connected cameras. PCO_GIGE_BW_SAME2ALL
									   //	       1: Max-Speed-Mode is allways active regardless how many cameras are connected. PCO_GIGE_BW_ALL2MAX
									   //          2: Maximal possible Bandwidth is used for active camera. Just one active camera is allowed. PCO_GIGE_BW_2ACTIVE
									   // Bit 12-31: Reserved
                                       // (LSB; default 0x00000001).      
  DWORD dwDataFormat;                  // DataFormat: default:  0x01100007
                                       // supported types:  Mono, 8Bit:  0x01080001
                                       //                   Mono, 16Bit: 0x01100007
                                       //                   RGB,  24Bit: 0x02180015  (R=G=B=8Bit)
                                       //                   RGB,  32Bit: 0x02200016  (R=G=B=a=8Bit)
  DWORD dwCameraIPAddress;             // Current Ip Address of the Camera
									   //  (can not be changed with Set_Transfer_Param() routine )
  DWORD dwUDPImgPcktSize;			   // Size of an UDP Image packet
									   //  (can not be changed with Set_Transfer_Param() routine )
  UINT64 ui64MACAddress;               // Settings are attached to this interface

}PCO_GIGE_TRANSFER_PARAM; 


typedef struct _IMAGE_TRANSFER_MODE_PARAM
{
  WORD        wSize;               // size of this struct
  WORD        wMode;               // transfer mode, e.g. full, scaled, cutout etc.
  WORD        wImageWidth;         // original image width
  WORD        wImageHeight;        // original image height
  WORD        wTxWidth;            // width of transferred image (scaled or cutout)
  WORD        wTxHeight;           // width of transferred image (scaled or cutout)
  WORD        wParam[8];           // params, meaning depends on selected mode else set to zero
  WORD        ZZwDummy[10];        // for future use, set to zero
} IMAGE_TRANSFER_MODE_PARAM;


//loglevels for interface dll
#define ERROR_M     0x0001
#define INIT_M      0x0002
#define BUFFER_M    0x0004
#define PROCESS_M   0x0008

#define COC_M       0x0010
#define INFO_M      0x0020
#define COMMAND_M   0x0040

#define PCI_M       0x0080

#define TIME_M      0x1000 
#define TIME_MD     0x2000 
#define THREAD_ID   0x4000 
#define CPU_ID      0x8000           // not on XP


#endif
//-----------------------------------------------------------------//
// Name        | sc2_telegram.h              | Type: ( ) source    //
//-------------------------------------------|       (*) header    //
// Project     | SC2                         |       ( ) others    //
//-----------------------------------------------------------------//
// Platform    | - Embedded platforms like M16C, AVR32, PIC32 etc. //
//             | - PC with several Windows versions, Linux etc.    //
//-----------------------------------------------------------------//
// Environment | - Platform dependent                              //
//-----------------------------------------------------------------//
// Purpose     | SC2 - Packet Structure defines                    //
//-----------------------------------------------------------------//
// Author      | MBl/FRe/LWa/AGr and others, PCO AG                //
//-----------------------------------------------------------------//
// Revision    | versioned using SVN                               //
//-----------------------------------------------------------------//
// Notes       |                                                   //
//-----------------------------------------------------------------//
// Attention!! | Attention!! If these structures are released to   //
//             | market in any form, the position of each data     //
//             | entry must not be moved any longer! Enhancements  //
//             | can be done by exploiting the dummy entries and   //
//             | dummy fields.                                     //
//-----------------------------------------------------------------//
// (c) 2003-2014 PCO AG * Donaupark 11 * D-93309 Kelheim / Germany //
// *  Phone: +49 (0)9441 / 2005-0  *                               //
// *  Fax:   +49 (0)9441 / 2005-20 *  Email: info@pco.de           //
//-----------------------------------------------------------------//


//-----------------------------------------------------------------//
// Revision History:                                               //
//-----------------------------------------------------------------//
// Rev.:     | Date:      | Changed:                               //
// --------- | ---------- | ---------------------------------------//
//  0.01     | 10.06.2003 |  MBL/new file                          //
//-----------------------------------------------------------------//
//  0.02     | 26.06.2003 |  LWA: Checksum added to all telegrams  //
//           |            |       (see also comments)              //
//-----------------------------------------------------------------//
//  0.12     | xx.07.2003 |  New: REQUEST IMAGE command /LWA       //
//-----------------------------------------------------------------//
//  0.13     | 24.07.2003 |  Removed:                              //
//           |            |  - ISOCHRONOUS_START_MSG structure     //
//           |            |  - ISOCHRONOUS_STOP_MSG structure      //
//           |            |  - INTERNAL_SEND_IMAGES_MSG structure  //
//           |            |  - INTERNAL_STOP_IMAGES_MSG structure  //
//           |            |    (not used any longer)               //
//-----------------------------------------------------------------//
//  0.14     | 01.09.2003 |  Renamed: /LWA                         //
//           |            |  - SC2_Preview_Mode_Response to        //
//           |            |      SC2_Liveview_Mode_Response        //
//           |            |  - SC2_Set_Preview_Mode to             //
//           |            |      SC2_Set_Liveview_Mode             //
//           |            |  Due to renaming Preview to Live View. //
//-----------------------------------------------------------------//
//  0.15     | 01.09.2003 |  Changed /LWA                          //
//           |            |  Removed: - SC2_Image_Ready_Message    //
//           |            |  Added:   - SC2_Image_Avail_Message    //
//           |            |           - SC2_No_Image_Avail_Message //
//           |            |           - SC2_Record_On_Message      //
//           |            |           - SC2_Record_Off_Message     //
//           | 24.09.2003 |  Added /LWA                            //
//           |            |    - SC2_Load_COC_Data                 //
//           |            |    - SC2_Send_COC_Command              //
//           | 16.10.2003 |  Added /MBL                            //
//           |            |    - SC2_COC_Operation_Mode_Response   //
//           |            |    - SC2_Set_COC_Operation_Mode        //
//           |            |    - SC2_COC_Runtime_Response          //
//-----------------------------------------------------------------//
//  0.16     | 19.11.2003 |  Changed LWA                           //
//           |            |  - SC2_Camera_Description_Response     //
//           |            |    changed. Added descriptors for ROI  //
//           |            |    stepping and min. delay / exposure  //
//           |            |    time steps.                         //
//           |            |  - SC2_Camera_Health_Status_Response   //
//           |            |    Status field included               //
//-----------------------------------------------------------------//
//  0.17     | 19.11.2003 |  Added LWA                             //
//           |            |  - structures for fixed data area,     //
//           |            |    like camera serial no, hardware     //
//           |            |    version, etc.                       //
//           | 16.01.2004 |  Changed LWA                           //
//           |            |  - Hardware revison (structure         //
//           |            |    (SC2_HWREVISION) changed: now one   //
//           |            |    revision code as word instead of    //
//           |            |    two bytes wih minor and major rev.  //
//           | 03.02.2004 |  Added MBL                             //
//           |            |    Chip descriptor color_pattern,      //
//           |            |    pattern typ                         //
//           |            |                                        //
//           | 17.02.2004 |  Added structures: LWa                 //
//           |            |  - Start_DSNU_Calibration              //
//           |            |  - Start_DSNU_Calibration_Response     //
//           |            |  - Set_DSNU_Correction_Mode            //
//           |            |  - Get_DSNU_Correction_Mode_Response   //
//           |            |                                        //
//           | 26.02.2004 |  Added structures: LWa                 //
//           |            |  - SC2_Read_Head_EE_Data               //
//           |            |  - SC2_Write_Head_EE_Data              //
//           |            |  - SC2_Head_EE_Data_Response           //
//           |            |                                        //
//-----------------------------------------------------------------//
//  0.18     | 22.03.2004 |  Changed LWA                           //
//           |            |  - reorganized update failure tele-    //
//           |            |    grams such that they are similar to //
//           |            |    standard failure telegram, i.e.     //
//           |            |    failure code is dword after size.   //
//           | 02.04.2004 |  Added telegrams: /LWA                 //
//           |            |  - SC2_Get_FPS_Exposure_Mode           //
//           |            |  - SC2_Set_FPS_Exposure_Mode           //
//           |            |  - SC2_FPS_Exposure_Mode_Response      //
//           | 25.06.2004 |  Added telegrams: /FRE                 //
//           |            |  - SC2_Get_Bit_Alignment               //
//           |            |  - SC2_Bit_Alignment_Response          //
//-----------------------------------------------------------------//
//  0.19     | 01.07.2004 |  Changed LWA                           //
//           |            |  - the member dwtime_us in structure   //
//           |            |    SC2_COC_Runtime_Response changed to //
//           |            |    dwtime_ns.                          //
//           | 06.07.2004 |  Added telegrams: /MBL CameraLink      //
//           |            |  - SC2_Set_CL_Baudrate                 //
//           |            |  - SC2_Get_CL_Baudrate                 //
//           |            |  - SC2_Set_CL_Configuration            //
//           |            |  - SC2_Get_CL_Confuguration            //
//-----------------------------------------------------------------//
//  0.20     | 23.07.2004 |  LWA:  telegrams for internal use like //
//           |            |        debug and update telegrams      //
//           |            |        moved to SC2_TELEGRAM_INTERN.H  //
//           | 16.09.2004 |  LWA:  telegrams added:                //
//           |            |                                        //
//           |            |  SC2_IEEE1394_Iso_Byte_Order_Response  //
//           |            |  SC2_Get_IEEE1394_Iso_Byte_Order       //
//           |            |                                        //
//           |            |  Used for OEM camera, not for          //
//           |            |  pco.camera series                     //
//           |            |                                        //
//           | 19.10.2004 |  LWA:  telegrams added:                //
//           |            |                                        //
//           |            |  SC2_Repeat_Image                      //
//           |            |  SC2_Repeat_Image_Response             //
//           |            |    (commands sends last image again)   //
//           |            |  SC2_Cancel_Image_Transfer             //
//           |            |  SC2_Cancel_Image_Transfer_Response    //
//           |            |    (aborts running image transfer)     //
//-----------------------------------------------------------------//
//  0.21     | 11.04.2005 |  LWA:  added telegrams:                //
//           |            |  SC2_Get_Noise_Filter_Mode             //
//           |            |  SC2_Set_Noise_Filter_Mode             //
//           |            |  SC2_Noise_Filter_Mode_Response        //
//           |            |  SC2_Camera_Desription: new member     //
//           |            |    wNoiseFilterDESC                    //
//-----------------------------------------------------------------//
//  0.21     | 04.05.2005 |  LWA:  changed telegram:               //
//           |            |  SC2_Camera_Desription:                //
//           |            |    - dwGeneralCaps1 added              //
//           |            |    - wNoiseFilterDESC removed          //
//-----------------------------------------------------------------//
//  0.22     | 19.10.2005 |  MBL:  definitionen aus intern:        //
//           |            |    - SC2_Image_Transfer_Done_Message   //
//           |            |                                        //
//           | 27.02.2006 |  LWA:  added telegrams:                //
//           |            |  SC2_Camera_Name_Response              //
//           |            |                                        //
//           | 09.03.2006 |  LWA:  added telegrams:                //
//           |            |  SC2_Get_Hot_Pixel_Correction_Mode     //
//           |            |  SC2_Set_Hot_Pixel_Correction_Mode     //
//           |            |  SC2_Hot_Pixel_Correction_Mode_Response//
//-----------------------------------------------------------------//
//  0.23     | 01.06.2006 |  Preparation for modulation mode:      //
//           |   (FRe)    |  Added modulation mode parameters and  //
//           |            |  telegrams:                            //
//           |            |    do_S(G)ET_MODULATION_MODE           //
//           |            |  Added second descriptor, flags and    //
//           |            |  telegram:                             //
//           |            |    do_GET_DESCRIPTION_EX               //
//           |            |  Changed header to local               //
//           |            |  c:\pco_include\include in order to    //
//           |            |   support header file repository       //
//-----------------------------------------------------------------//
//  0.24     | 19.09.2007 | FRE:Added tel. for GET_INFO_STRING     //
//-----------------------------------------------------------------//
//  0.25     | 05.03.2009 | FRE: Added Get/SetFrameRate            //
//           |            | Added HW IO functions and desc.        //
//           | 01.07.2009 | FRE:Add. SC2_Get_Image_Timing_Response //
//-----------------------------------------------------------------//
//  0.26     | 31.08.2010 | FRE:Added tel. for Lookup Tables       //
//-----------------------------------------------------------------//
//  0.27     | 09.12.2013 | RFR: Added telegrams for pco.flim      //
//           |            | The telegram names contain the         //
//           |            | additional element "FLIM":             //
//           |            | SC2_Set_FLIM_*, SC2_Get_FLIM_*         //
//-----------------------------------------------------------------//
//  0.28     | 17.02.2014 | AGR:  Added Get_Cooling_Setpoints      //
//-----------------------------------------------------------------//

  // LWA 26.06.03: Checksum byte was added because now, if declaring
  //               a telegram variable the checksum byte is included
  //               and writing the checksum byte will not fail.
  //               For the length of the telegram now take simply the
  //               sizeof operator: Telegram.Length = sizeof(Telegram)


#ifndef  SC2_TELEGRAM_H
#define  SC2_TELEGRAM_H

#include "sc2_common.h"

#define FWREVISION 0x00009000

#if defined(WIN32) || defined(__linux__)
//#pragma message("Structures packed to 1 byte boundary!")
#pragma pack(push) 
#pragma pack(1)            
#endif


#ifdef __MICROBLAZE__
#define struct struct __attribute__ ((packed))
#endif

#ifdef _PIC32_
#define struct struct __attribute__ ((packed))
#endif


// ================================================================================== //
// ======== FireWire address space definition for telegram transmission ============= //
// ================================================================================== //


